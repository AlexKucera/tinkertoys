{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Tinkertoys Documentation","text":"<p>Welcome to the comprehensive documentation for the Tinkertoys utility scripts collection. This repository contains a carefully curated set of automation tools, development utilities, and system administration scripts designed to streamline workflows and improve productivity.</p>"},{"location":"index.html#overview","title":"Overview","text":"<p>Tinkertoys is a collection of utility scripts and automation tools organized by programming language and purpose. The repository includes:</p> <ul> <li>Bash Scripts: System administration, media processing, development tools, and rendering automation</li> <li>Python Scripts: File management, data processing, and integration utilities  </li> <li>Ruby Scripts: Task management and workflow integration tools</li> <li>Configuration Files: Centralized settings for various tools and services</li> </ul>"},{"location":"index.html#quick-start","title":"Quick Start","text":""},{"location":"index.html#prerequisites","title":"Prerequisites","text":"<ul> <li>macOS: Most scripts are designed for macOS (some may work on Linux)</li> <li>Bash 4.0+: Modern bash shell for script execution</li> <li>FFmpeg: Required for media processing scripts</li> <li>Python 3.6+: For Python utilities</li> <li>Ruby 2.6+: For Ruby scripts</li> </ul>"},{"location":"index.html#installation","title":"Installation","text":"<ol> <li>Clone or download the repository</li> <li>Set up configuration files in the <code>config/</code> directory</li> <li>Install required dependencies based on the scripts you plan to use</li> <li>Make scripts executable: <code>chmod +x script_name.sh</code></li> </ol>"},{"location":"index.html#key-features","title":"Key Features","text":""},{"location":"index.html#development-tools","title":"\ud83d\udd27 Development Tools","text":"<ul> <li>App Builder: Convert shell scripts to macOS applications</li> <li>Version Management: Automated version number incrementing</li> <li>Folder Comparison: Compare directories for differences</li> <li>Image Extension Fixing: Automatically correct file extensions</li> </ul>"},{"location":"index.html#media-processing","title":"\ud83c\udfa5 Media Processing","text":"<ul> <li>Video Transcoding: Convert videos to H.264, ProRes, and web formats</li> <li>Image Sequence Processing: Convert image sequences to video</li> <li>Audio Processing: Split stereo audio to mono channels</li> <li>Format Optimization: Optimized settings for different use cases</li> </ul>"},{"location":"index.html#system-administration","title":"\u2699\ufe0f System Administration","text":"<ul> <li>Application Management: Track installed applications for backup</li> <li>Log Monitoring: Automated log size checking and collection</li> <li>Memory Management: Intelligent memory purging for macOS</li> <li>Disk Management: Find disk devices by label</li> </ul>"},{"location":"index.html#rendering-tools","title":"\ud83c\udfac Rendering Tools","text":"<ul> <li>Email Notifications: Automated notifications for completed renders</li> <li>Nuke Integration: Streamlined Nuke rendering with progress tracking</li> <li>Render Statistics: Time tracking and performance monitoring</li> </ul>"},{"location":"index.html#shared-libraries","title":"\ud83d\udcda Shared Libraries","text":"<ul> <li>Common Functions: Reusable validation and utility functions</li> <li>Media Functions: Specialized video/audio processing utilities</li> <li>System Functions: Cross-platform system information and management</li> </ul>"},{"location":"index.html#architecture","title":"Architecture","text":""},{"location":"index.html#security-best-practices","title":"Security &amp; Best Practices","text":"<ul> <li>No Hardcoded Credentials: All sensitive data uses environment variables</li> <li>Input Validation: Comprehensive validation of all user inputs</li> <li>Error Handling: Proper error handling with <code>set -euo pipefail</code></li> <li>Path Safety: Protection against path traversal attacks</li> </ul>"},{"location":"index.html#code-organization","title":"Code Organization","text":"<ul> <li>Modular Design: Scripts organized by functional category</li> <li>Shared Libraries: Common functionality extracted to reusable modules</li> <li>Consistent Interface: Standardized help system across all scripts</li> <li>Configuration Management: Centralized configuration files</li> </ul>"},{"location":"index.html#quality-assurance","title":"Quality Assurance","text":"<ul> <li>Comprehensive Testing: Automated test suite for all scripts</li> <li>Syntax Validation: All scripts validated for proper bash syntax</li> <li>Functionality Testing: Safe functional testing of key operations</li> <li>Integration Testing: Validation of shared library integration</li> </ul>"},{"location":"index.html#getting-help","title":"Getting Help","text":"<p>Each script includes comprehensive help documentation accessible via:</p> <pre><code>script_name.sh --help\n# or\nscript_name.sh -h\n</code></pre> <p>For detailed documentation on specific scripts, see the navigation menu or browse the individual script documentation pages.</p>"},{"location":"index.html#contributing","title":"Contributing","text":"<p>When contributing to this repository:</p> <ol> <li>Follow existing code style and organization patterns</li> <li>Include comprehensive help documentation in all scripts</li> <li>Add appropriate error handling and input validation</li> <li>Update documentation for any new features or changes</li> <li>Test scripts thoroughly before submission</li> </ol>"},{"location":"index.html#license","title":"License","text":"<p>This project is maintained by Alexander Kucera / babylondreams.de. Individual scripts may have specific licensing terms - please check script headers for details.</p>"},{"location":"index.html#support","title":"Support","text":"<p>For issues, questions, or contributions, please refer to the individual script documentation or contact the maintainer.</p> <p>Last updated: July 2025</p>"},{"location":"bash/overview.html","title":"Bash Scripts Overview","text":"<p>The bash scripts collection provides comprehensive automation tools for development, media processing, system administration, and rendering workflows. All scripts have been modernized with proper error handling, security best practices, and shared library integration.</p>"},{"location":"bash/overview.html#script-categories","title":"Script Categories","text":""},{"location":"bash/overview.html#development-tools","title":"\ud83d\udd27 Development Tools","text":"<p>Development utilities for app creation, version management, and project maintenance.</p> Script Purpose Key Features appifiy.sh Convert shell scripts to macOS apps Creates .app bundles, custom naming comparefolders.sh Compare two directories Recursive comparison, difference reporting fixImgExt.sh Fix image file extensions Content-based detection, batch processing version_up.sh Increment version numbers Semantic versioning, history tracking"},{"location":"bash/overview.html#media-processing","title":"\ud83c\udfa5 Media Processing","text":"<p>Professional-grade media conversion and processing tools with optimized settings.</p> Script Purpose Key Features convert_images_to_h264.sh Convert image sequences to H.264 Configurable quality, bitrate guidelines convert_images_to_prores.sh Convert image sequences to ProRes Multiple ProRes formats, high quality convert_movie_to_h264.sh Convert movies to H.264 Optimized compression, format flexibility convert_movie_to_prores.sh Convert movies to ProRes Professional codecs, configurable quality movie_to_web.sh Convert movies for web MP4 + WebM output, web optimization split_stereo_to_mono.sh Split stereo audio to mono Apple Lossless output, channel separation"},{"location":"bash/overview.html#system-administration","title":"\u2699\ufe0f System Administration","text":"<p>Tools for system monitoring, application management, and maintenance automation.</p> Script Purpose Key Features application_list_updater.sh Track installed applications Homebrew integration, backup lists checkLogSize.sh Monitor log file sizes Configurable limits, automation-ready getDiskDevice.sh Find disk devices by label Label-based lookup, device identification purgeLoop.sh Automated memory purging Intelligent thresholds, continuous monitoring log_collector.sh Advanced log collection Category filtering, time-based queries"},{"location":"bash/overview.html#rendering-tools","title":"\ud83c\udfac Rendering Tools","text":"<p>Automation and notification tools for rendering workflows.</p> Script Purpose Key Features mail_send.sh Email notifications for renders Timing tracking, completion alerts nukerender_bash.sh Automated Nuke rendering Interactive setup, email integration"},{"location":"bash/overview.html#shared-libraries","title":"\ud83d\udcda Shared Libraries","text":"<p>Reusable function libraries that provide common functionality across all scripts.</p> Library Purpose Key Functions common.sh Core utility functions Validation, timestamps, logging media_functions.sh Media processing utilities Codec setup, format validation system_functions.sh System information functions Memory info, platform detection writeToLogAndEcho.sh Logging utilities Console + file output, message handling"},{"location":"bash/overview.html#common-features","title":"Common Features","text":""},{"location":"bash/overview.html#security-safety","title":"Security &amp; Safety","text":"<ul> <li>Input Validation: All user inputs are validated and sanitized</li> <li>Path Protection: Protection against path traversal attacks</li> <li>No Hardcoded Secrets: All credentials use environment variables</li> <li>Error Handling: Comprehensive error handling with <code>set -euo pipefail</code></li> </ul>"},{"location":"bash/overview.html#user-experience","title":"User Experience","text":"<ul> <li>Standardized Help: All scripts support <code>-h</code> and <code>--help</code> flags</li> <li>Consistent Interface: Unified argument and option patterns</li> <li>Progress Feedback: Clear status messages and progress indicators</li> <li>Error Messages: Helpful error messages with troubleshooting guidance</li> </ul>"},{"location":"bash/overview.html#quality-assurance","title":"Quality Assurance","text":"<ul> <li>Syntax Validation: All scripts validated for correct bash syntax</li> <li>Shared Libraries: Common functionality extracted to reusable modules</li> <li>Testing: Comprehensive test suite validates all functionality</li> <li>Documentation: Complete documentation following MkDocs standards</li> </ul>"},{"location":"bash/overview.html#usage-patterns","title":"Usage Patterns","text":""},{"location":"bash/overview.html#getting-help","title":"Getting Help","text":"<p>Every script provides comprehensive help: <pre><code>script_name.sh --help\n</code></pre></p>"},{"location":"bash/overview.html#common-options","title":"Common Options","text":"<p>Most scripts support these standard patterns: - <code>-h, --help</code>: Show help information - Input validation with clear error messages - Configuration via environment variables where appropriate - Progress feedback and status reporting</p>"},{"location":"bash/overview.html#environment-variables","title":"Environment Variables","text":"<p>Scripts use environment variables for configuration: - <code>MAIL_PASSWORD</code>: Email notification password - <code>NUKEPATH</code>: Path to Nuke executable - <code>LOG_FILE</code>: Custom log file location (for logging utilities)</p>"},{"location":"bash/overview.html#integration","title":"Integration","text":""},{"location":"bash/overview.html#shared-libraries_1","title":"Shared Libraries","text":"<p>Scripts automatically source required shared libraries: <pre><code>source \"${SCRIPT_DIR}/../lib/common.sh\"\nsource \"${SCRIPT_DIR}/../lib/media_functions.sh\"  # Media scripts\nsource \"${SCRIPT_DIR}/../lib/system_functions.sh\" # System scripts\n</code></pre></p>"},{"location":"bash/overview.html#configuration-files","title":"Configuration Files","text":"<p>Centralized configuration in <code>config/</code> directory: - <code>mail_send.conf</code>: Email notification settings - <code>log_sources.conf</code>: Log collection source definitions</p>"},{"location":"bash/overview.html#testing","title":"Testing","text":"<p>Comprehensive test suite available: <pre><code># Run all tests\n./test_all_scripts.sh\n\n# Quick validation\n./quick_test.sh\n\n# Full validation with logging\n./final_validation.sh\n</code></pre></p>"},{"location":"bash/overview.html#architecture","title":"Architecture","text":"<p>The bash scripts follow a consistent architecture pattern:</p> <ol> <li>Header &amp; Metadata: Script purpose, author, requirements</li> <li>Library Integration: Source shared libraries as needed</li> <li>Help System: Standardized help function and argument parsing</li> <li>Input Validation: Validate all arguments and file paths</li> <li>Main Logic: Core functionality with error handling</li> <li>Output &amp; Cleanup: Status reporting and temporary file cleanup</li> </ol> <p>This organization ensures maintainability, security, and consistent user experience across all scripts.</p>"},{"location":"bash/development/appifiy.html","title":"App Builder (appifiy.sh)","text":"<p>Convert shell scripts into native macOS .app bundles for easier distribution and execution.</p>"},{"location":"bash/development/appifiy.html#overview","title":"Overview","text":"<p>The <code>appifiy.sh</code> script transforms any shell script into a macOS application bundle (.app), making it possible to run command-line tools through the Finder or Dock. This is particularly useful for creating user-friendly interfaces for automation scripts.</p>"},{"location":"bash/development/appifiy.html#usage","title":"Usage","text":"<pre><code>appifiy.sh script_file.sh [app_name]\n</code></pre>"},{"location":"bash/development/appifiy.html#arguments","title":"Arguments","text":"Argument Type Description <code>script_file</code> Required Path to the shell script to convert <code>app_name</code> Optional Custom name for the app (defaults to script filename)"},{"location":"bash/development/appifiy.html#options","title":"Options","text":"Option Description <code>-h, --help</code> Show help message and exit"},{"location":"bash/development/appifiy.html#examples","title":"Examples","text":""},{"location":"bash/development/appifiy.html#basic-usage","title":"Basic Usage","text":"<pre><code># Convert script using default name\n./appifiy.sh my-script.sh\n\n# This creates: my-script.app\n</code></pre>"},{"location":"bash/development/appifiy.html#custom-app-name","title":"Custom App Name","text":"<pre><code># Convert with custom name\n./appifiy.sh backup-script.sh \"Backup Tool\"\n\n# This creates: Backup Tool.app\n</code></pre>"},{"location":"bash/development/appifiy.html#convert-utility-scripts","title":"Convert Utility Scripts","text":"<pre><code># Convert a log monitor into an app\n./appifiy.sh checkLogSize.sh \"Log Monitor\"\n\n# Convert a media processor\n./appifiy.sh convert_movie_to_h264.sh \"Video Converter\"\n</code></pre>"},{"location":"bash/development/appifiy.html#features","title":"Features","text":""},{"location":"bash/development/appifiy.html#core-functionality","title":"\ud83d\udd27 Core Functionality","text":"<ul> <li>Native App Bundle Creation: Generates proper macOS .app structure</li> <li>Automatic Naming: Uses script filename if no app name provided</li> <li>Executable Setup: Sets proper permissions for the contained script</li> <li>Error Prevention: Checks for existing apps to prevent overwrites</li> </ul>"},{"location":"bash/development/appifiy.html#safety-features","title":"\ud83d\udee1\ufe0f Safety Features","text":"<ul> <li>Input Validation: Verifies script file exists before processing</li> <li>Collision Detection: Prevents overwriting existing .app bundles</li> <li>Path Validation: Ensures safe file operations</li> </ul>"},{"location":"bash/development/appifiy.html#user-experience","title":"\ud83d\udca1 User Experience","text":"<ul> <li>Simple Interface: Single command converts any script</li> <li>Clear Feedback: Reports success and final app location</li> <li>Help System: Comprehensive help with examples</li> </ul>"},{"location":"bash/development/appifiy.html#how-it-works","title":"How It Works","text":"<p>The script creates a standard macOS application bundle structure:</p> <pre><code>MyApp.app/\n\u251c\u2500\u2500 Contents/\n    \u2514\u2500\u2500 MacOS/\n        \u2514\u2500\u2500 MyApp          # Your original script\n</code></pre> <ol> <li>Validation: Checks that the source script exists</li> <li>Structure Creation: Creates the .app bundle directory structure  </li> <li>Script Installation: Copies your script to the MacOS directory</li> <li>Permission Setup: Makes the script executable within the bundle</li> <li>Verification: Reports successful creation with full path</li> </ol>"},{"location":"bash/development/appifiy.html#requirements","title":"Requirements","text":""},{"location":"bash/development/appifiy.html#system-requirements","title":"System Requirements","text":"<ul> <li>macOS: Required for .app bundle creation</li> <li>Bash: Standard bash shell</li> <li>File System Access: Write permissions in current directory</li> </ul>"},{"location":"bash/development/appifiy.html#input-requirements","title":"Input Requirements","text":"<ul> <li>Valid Script File: Source script must exist and be readable</li> <li>Unique Name: App name must not conflict with existing .app bundles</li> </ul>"},{"location":"bash/development/appifiy.html#configuration","title":"Configuration","text":"<p>No configuration files required. The script operates entirely from command-line arguments.</p>"},{"location":"bash/development/appifiy.html#output","title":"Output","text":""},{"location":"bash/development/appifiy.html#success-output","title":"Success Output","text":"<pre><code>Creating app bundle: MyScript.app\nSuccessfully created: /full/path/to/MyScript.app\n</code></pre>"},{"location":"bash/development/appifiy.html#error-scenarios","title":"Error Scenarios","text":"<ul> <li>Missing Script: \"Error: Script file 'filename.sh' does not exist\"</li> <li>Existing App: \"Error: /path/MyScript.app already exists\"</li> <li>Missing Arguments: Shows usage information</li> </ul>"},{"location":"bash/development/appifiy.html#integration","title":"Integration","text":""},{"location":"bash/development/appifiy.html#with-other-scripts","title":"With Other Scripts","text":"<pre><code># Create apps for multiple scripts\nfor script in *.sh; do\n    ./appifiy.sh \"$script\"\ndone\n\n# Create themed app names\n./appifiy.sh video_converter.sh \"\ud83c\udfac Video Converter\"\n./appifiy.sh log_monitor.sh \"\ud83d\udcca Log Monitor\"\n</code></pre>"},{"location":"bash/development/appifiy.html#automation-examples","title":"Automation Examples","text":"<pre><code># Build distribution package\n./appifiy.sh main_tool.sh \"Production Tool\"\n./appifiy.sh setup_helper.sh \"Setup Assistant\"\n./appifiy.sh maintenance.sh \"Maintenance Utility\"\n</code></pre>"},{"location":"bash/development/appifiy.html#best-practices","title":"Best Practices","text":""},{"location":"bash/development/appifiy.html#script-preparation","title":"Script Preparation","text":"<ol> <li>Test Scripts Thoroughly: Ensure scripts work correctly before conversion</li> <li>Add Help Systems: Include <code>--help</code> functionality in your scripts</li> <li>Handle Paths Properly: Use absolute paths or relative to script location</li> <li>Error Handling: Implement proper error handling in source scripts</li> </ol>"},{"location":"bash/development/appifiy.html#app-naming","title":"App Naming","text":"<ol> <li>Descriptive Names: Use clear, descriptive app names</li> <li>Avoid Conflicts: Check for existing apps before conversion</li> <li>Consistent Naming: Use consistent naming patterns for related tools</li> </ol>"},{"location":"bash/development/appifiy.html#distribution","title":"Distribution","text":"<ol> <li>Test App Bundles: Test created apps on clean systems</li> <li>Include Documentation: Provide README files with your apps</li> <li>Version Control: Track both scripts and app bundles appropriately</li> </ol>"},{"location":"bash/development/appifiy.html#troubleshooting","title":"Troubleshooting","text":""},{"location":"bash/development/appifiy.html#common-issues","title":"Common Issues","text":"<p>App Won't Launch - Check original script permissions and syntax - Verify script doesn't require specific working directory - Test original script independently first</p> <p>Permission Denied - Ensure write permissions in target directory - Check that original script is readable</p> <p>App Already Exists - Remove existing .app bundle or choose different name - Use <code>rm -rf \"AppName.app\"</code> to remove existing bundle</p>"},{"location":"bash/development/appifiy.html#technical-details","title":"Technical Details","text":""},{"location":"bash/development/appifiy.html#based-on","title":"Based On","text":"<ul> <li>Reference implementation: https://mathiasbynens.be/notes/shell-script-mac-apps</li> <li>Enhanced with modern error handling and validation</li> </ul>"},{"location":"bash/development/appifiy.html#security-considerations","title":"Security Considerations","text":"<ul> <li>Input Validation: All file paths validated before use</li> <li>Safe Operations: Prevents overwriting existing files</li> <li>Path Safety: No arbitrary path construction or traversal</li> </ul>"},{"location":"bash/development/appifiy.html#limitations","title":"Limitations","text":"<ul> <li>macOS Only: App bundles only work on macOS systems</li> <li>Simple Bundle: Creates basic app structure without advanced features</li> <li>No Icon Support: Generated apps use default system icon</li> </ul>"},{"location":"bash/development/appifiy.html#see-also","title":"See Also","text":"<ul> <li>Version Incrementer - For managing app versions</li> <li>Shared Libraries - Common validation functions used</li> <li>Development Tools Overview - Other development utilities</li> </ul> <p>Script Location: <code>bash/development/appifiy.sh</code> Author: Alexander Kucera / babylondreams.de</p>"},{"location":"bash/development/comparefolders.html","title":"Folder Comparison (comparefolders.sh)","text":"<p>Compare two directories for file differences with detailed reporting and automated output generation.</p>"},{"location":"bash/development/comparefolders.html#overview","title":"Overview","text":"<p>The <code>comparefolders.sh</code> script performs comprehensive recursive comparison between two directories, identifying differences in files and generating detailed reports. It's designed for backup verification, synchronization validation, and content auditing.</p>"},{"location":"bash/development/comparefolders.html#usage","title":"Usage","text":"<pre><code>comparefolders.sh &lt;path1&gt; &lt;path2&gt;\n</code></pre>"},{"location":"bash/development/comparefolders.html#arguments","title":"Arguments","text":"Argument Type Description <code>path1</code> Required Path to first directory to compare <code>path2</code> Required Path to second directory to compare"},{"location":"bash/development/comparefolders.html#options","title":"Options","text":"Option Description <code>-h, --help</code> Show help message and exit"},{"location":"bash/development/comparefolders.html#examples","title":"Examples","text":""},{"location":"bash/development/comparefolders.html#basic-directory-comparison","title":"Basic Directory Comparison","text":"<pre><code># Compare two backup directories\n./comparefolders.sh /Users/alex/Documents/backup1 /Users/alex/Documents/backup2\n\n# Compare project versions\n./comparefolders.sh ~/Projects/v1.0 ~/Projects/v2.0\n</code></pre>"},{"location":"bash/development/comparefolders.html#backup-verification","title":"Backup Verification","text":"<pre><code># Verify backup integrity\n./comparefolders.sh /original/data /backup/location\n\n# Compare local vs network storage\n./comparefolders.sh ~/Documents /Volumes/NetworkDrive/Documents\n</code></pre>"},{"location":"bash/development/comparefolders.html#development-workflow","title":"Development Workflow","text":"<pre><code># Compare development branches (if using file-based projects)\n./comparefolders.sh ~/Projects/main-branch ~/Projects/feature-branch\n\n# Verify deployment\n./comparefolders.sh ~/local-build ~/staging-deployment\n</code></pre>"},{"location":"bash/development/comparefolders.html#features","title":"Features","text":""},{"location":"bash/development/comparefolders.html#comprehensive-comparison","title":"\ud83d\udd0d Comprehensive Comparison","text":"<ul> <li>Recursive Analysis: Compares all files in subdirectories</li> <li>File Content Comparison: Detects differences in file contents, not just names</li> <li>Metadata Awareness: Identifies files with different timestamps or sizes</li> <li>Missing File Detection: Reports files present in one directory but not the other</li> </ul>"},{"location":"bash/development/comparefolders.html#smart-filtering","title":"\ud83d\udee1\ufe0f Smart Filtering","text":"<ul> <li>System File Exclusion: Automatically excludes <code>.DS_Store</code> files</li> <li>Thumbnail Filtering: Ignores <code>Thumbs</code> files for cleaner results</li> <li>Hidden File Handling: Processes hidden files but filters out system artifacts</li> </ul>"},{"location":"bash/development/comparefolders.html#detailed-reporting","title":"\ud83d\udcca Detailed Reporting","text":"<ul> <li>Output File Generation: Creates <code>~/compare.txt</code> with detailed results</li> <li>Difference Counting: Reports total number of differences found</li> <li>Clear Status Messages: Provides immediate feedback on comparison results</li> <li>Success Indicators: Clear indication when directories are identical</li> </ul>"},{"location":"bash/development/comparefolders.html#how-it-works","title":"How It Works","text":"<p>The script uses the <code>diff</code> command with recursive comparison:</p> <ol> <li>Input Validation: Verifies both directories exist and are accessible</li> <li>Recursive Comparison: Uses <code>diff -qr</code> for comprehensive file comparison</li> <li>Smart Filtering: Excludes system files that shouldn't affect comparison</li> <li>Result Processing: Generates report file and provides summary statistics</li> <li>Status Reporting: Clear feedback on comparison results</li> </ol>"},{"location":"bash/development/comparefolders.html#output-format","title":"Output Format","text":""},{"location":"bash/development/comparefolders.html#console-output","title":"Console Output","text":"<pre><code>Comparing directories...\nPath 1: /Users/alex/Documents/old\nPath 2: /Users/alex/Documents/new\nOutput: /Users/alex/compare.txt\n\u2713 Differences found and written to /Users/alex/compare.txt\nNumber of differences: 5\n</code></pre>"},{"location":"bash/development/comparefolders.html#report-file-format","title":"Report File Format","text":"<p>The generated <code>~/compare.txt</code> contains detailed difference information: <pre><code>Only in /path1: unique_file.txt\nOnly in /path2: new_file.txt\nFiles /path1/modified.txt and /path2/modified.txt differ\n</code></pre></p>"},{"location":"bash/development/comparefolders.html#configuration","title":"Configuration","text":""},{"location":"bash/development/comparefolders.html#output-location","title":"Output Location","text":"<ul> <li>Default: Results saved to <code>~/compare.txt</code></li> <li>Automatic: Output file location reported in console</li> <li>Overwrite: Each run overwrites previous comparison results</li> </ul>"},{"location":"bash/development/comparefolders.html#environment-variables","title":"Environment Variables","text":"<p>No environment variables required. All configuration through command-line arguments.</p>"},{"location":"bash/development/comparefolders.html#integration","title":"Integration","text":""},{"location":"bash/development/comparefolders.html#with-backup-scripts","title":"With Backup Scripts","text":"<pre><code>#!/bin/bash\n# Backup verification script\nBACKUP_DATE=$(date +%Y%m%d)\n./comparefolders.sh ~/Documents ~/Backups/$BACKUP_DATE\n\nif [[ -s ~/compare.txt ]]; then\n    echo \"Backup verification failed - differences found\"\n    exit 1\nelse\n    echo \"Backup verification successful\"\nfi\n</code></pre>"},{"location":"bash/development/comparefolders.html#with-deployment-workflows","title":"With Deployment Workflows","text":"<pre><code># Pre-deployment verification\n./comparefolders.sh ~/build ~/staging\nif [[ ! -s ~/compare.txt ]]; then\n    echo \"Staging matches build - safe to deploy\"\nelse\n    echo \"Staging differences detected - review required\"\n    cat ~/compare.txt\nfi\n</code></pre>"},{"location":"bash/development/comparefolders.html#automated-monitoring","title":"Automated Monitoring","text":"<pre><code># Daily sync verification\n#!/bin/bash\nLOG_FILE=\"/var/log/sync_verification.log\"\n./comparefolders.sh /local/data /remote/sync\n\nif [[ -s ~/compare.txt ]]; then\n    echo \"$(date): Sync differences detected\" &gt;&gt; \"$LOG_FILE\"\n    cat ~/compare.txt &gt;&gt; \"$LOG_FILE\"\nelse\n    echo \"$(date): Sync verification passed\" &gt;&gt; \"$LOG_FILE\"\nfi\n</code></pre>"},{"location":"bash/development/comparefolders.html#best-practices","title":"Best Practices","text":""},{"location":"bash/development/comparefolders.html#directory-preparation","title":"Directory Preparation","text":"<ol> <li>Clean Paths: Ensure directory paths don't contain special characters</li> <li>Proper Permissions: Verify read access to both directories</li> <li>Network Considerations: Allow extra time for network-mounted directories</li> <li>Large Directories: Be patient with very large directory trees</li> </ol>"},{"location":"bash/development/comparefolders.html#result-interpretation","title":"Result Interpretation","text":"<ol> <li>Review Output File: Always check the generated comparison file</li> <li>Understand Differences: Distinguish between content and metadata differences</li> <li>Filter Expectations: Remember that system files are automatically filtered</li> <li>Context Matters: Consider whether detected differences are expected</li> </ol>"},{"location":"bash/development/comparefolders.html#performance-optimization","title":"Performance Optimization","text":"<ol> <li>Local Comparisons: Faster when both directories are local</li> <li>Network Mounts: Mount network drives before comparison for better performance</li> <li>Large Files: Comparison time increases with file count and size</li> <li>Parallel Runs: Avoid running multiple comparisons simultaneously</li> </ol>"},{"location":"bash/development/comparefolders.html#error-handling","title":"Error Handling","text":""},{"location":"bash/development/comparefolders.html#common-scenarios","title":"Common Scenarios","text":"<ul> <li>Missing Directories: Clear error message if either directory doesn't exist</li> <li>Permission Issues: Graceful handling of inaccessible files</li> <li>Network Timeouts: Proper error reporting for network-related issues</li> <li>Disk Space: Verification that output file can be written</li> </ul>"},{"location":"bash/development/comparefolders.html#exit-codes","title":"Exit Codes","text":"<ul> <li>0: Successful comparison (regardless of whether differences found)</li> <li>1: Error in execution (missing directories, permission issues, etc.)</li> </ul>"},{"location":"bash/development/comparefolders.html#troubleshooting","title":"Troubleshooting","text":""},{"location":"bash/development/comparefolders.html#no-output-file-generated","title":"No Output File Generated","text":"<ul> <li>Check write permissions to home directory</li> <li>Verify both input directories exist</li> <li>Ensure sufficient disk space for output file</li> </ul>"},{"location":"bash/development/comparefolders.html#missing-differences","title":"Missing Differences","text":"<ul> <li>System files (.DS_Store, Thumbs) are intentionally filtered</li> <li>Hidden files may not be compared depending on directory permissions</li> <li>Symbolic links handled differently than regular files</li> </ul>"},{"location":"bash/development/comparefolders.html#performance-issues","title":"Performance Issues","text":"<ul> <li>Large directory trees take significant time</li> <li>Network mounted directories slower than local</li> <li>Consider using <code>nice</code> command for large comparisons</li> </ul>"},{"location":"bash/development/comparefolders.html#technical-details","title":"Technical Details","text":""},{"location":"bash/development/comparefolders.html#dependencies","title":"Dependencies","text":"<ul> <li>diff: Standard Unix diff command with recursive support</li> <li>grep: For filtering unwanted files from results</li> <li>Shared Libraries: Uses common.sh for directory validation</li> </ul>"},{"location":"bash/development/comparefolders.html#filtering-logic","title":"Filtering Logic","text":"<pre><code>diff -qr \"$path1\" \"$path2\" | grep -v -e 'DS_Store' -e 'Thumbs'\n</code></pre>"},{"location":"bash/development/comparefolders.html#security-considerations","title":"Security Considerations","text":"<ul> <li>Path Validation: All paths validated before use</li> <li>No Arbitrary Execution: No dynamic command execution</li> <li>Safe File Operations: Read-only operations on input directories</li> </ul>"},{"location":"bash/development/comparefolders.html#see-also","title":"See Also","text":"<ul> <li>Common Functions - Shared validation functions used</li> <li>Development Tools Overview - Related development utilities</li> <li>System Administration - Monitoring and maintenance tools</li> </ul> <p>Script Location: <code>bash/development/comparefolders.sh</code> Author: Alexander Kucera / babylondreams.de Copyright: 2012 BabylonDreams. All rights reserved.</p>"},{"location":"bash/development/fixImgExt.html","title":"Image Extension Fixer (fixImgExt.sh)","text":"<p>Automatically correct image file extensions based on actual file content rather than current extension.</p>"},{"location":"bash/development/fixImgExt.html#overview","title":"Overview","text":"<p>The <code>fixImgExt.sh</code> script analyzes image files to determine their true format and corrects file extensions accordingly. This is particularly useful for fixing incorrectly named files, batch processing image collections, and ensuring accurate file type identification.</p>"},{"location":"bash/development/fixImgExt.html#usage","title":"Usage","text":"<pre><code>fixImgExt.sh [OPTIONS]\n</code></pre>"},{"location":"bash/development/fixImgExt.html#options","title":"Options","text":"Option Parameter Description <code>-f</code> FILE Process a single file with file path <code>-d</code> DIRECTORY Process all files in the specified directory <code>-r</code> Use with <code>-d</code> to process directories recursively <code>-s</code> Show detailed information for each file processed <code>-v</code> Log corrected files to <code>fixImgExt_info.txt</code> <code>-h</code> Show help message and exit"},{"location":"bash/development/fixImgExt.html#examples","title":"Examples","text":""},{"location":"bash/development/fixImgExt.html#single-file-processing","title":"Single File Processing","text":"<pre><code># Fix extension for a single image\n./fixImgExt.sh -f /path/to/image.wrong\n\n# Fix with detailed output\n./fixImgExt.sh -f -s /path/to/image.jpg\n</code></pre>"},{"location":"bash/development/fixImgExt.html#directory-processing","title":"Directory Processing","text":"<pre><code># Fix all images in a directory\n./fixImgExt.sh -d /path/to/images/\n\n# Process recursively with logging\n./fixImgExt.sh -d -r -v /path/to/image_collection/\n\n# Detailed processing with verbose output\n./fixImgExt.sh -d -s -v /Users/alex/Pictures/\n</code></pre>"},{"location":"bash/development/fixImgExt.html#batch-operations","title":"Batch Operations","text":"<pre><code># Process camera imports (often have generic extensions)\n./fixImgExt.sh -d -r -v ~/Pictures/Camera_Import/\n\n# Fix web downloads (may have incorrect extensions)\n./fixImgExt.sh -d -s ~/Downloads/images/\n\n# Process design project files\n./fixImgExt.sh -d -r -v ~/Projects/design_assets/\n</code></pre>"},{"location":"bash/development/fixImgExt.html#features","title":"Features","text":""},{"location":"bash/development/fixImgExt.html#content-based-detection","title":"\ud83d\udd0d Content-Based Detection","text":"<ul> <li>True Format Recognition: Uses <code>file</code> command to detect actual image format</li> <li>Extension Correction: Matches file extension to actual content</li> <li>Format Support: Supports major image formats (JPEG, PNG, GIF, TIFF, BMP, etc.)</li> <li>Professional Formats: Handles PSD, XCF, SVG, and WebM files</li> </ul>"},{"location":"bash/development/fixImgExt.html#safety-features","title":"\ud83d\udee1\ufe0f Safety Features","text":"<ul> <li>Collision Prevention: Avoids overwriting existing files</li> <li>Incremental Naming: Uses <code>filename_0.ext</code>, <code>filename_1.ext</code> for conflicts</li> <li>Path Validation: Prevents path traversal attacks</li> <li>Backup Logging: Optional logging of all changes made</li> </ul>"},{"location":"bash/development/fixImgExt.html#detailed-reporting","title":"\ud83d\udcca Detailed Reporting","text":"<ul> <li>Progress Feedback: Shows what files are being processed</li> <li>Change Logging: Optional logging to <code>fixImgExt_info.txt</code></li> <li>Detailed View: Optional verbose output showing file analysis</li> <li>Statistics: Reports successful corrections and any issues</li> </ul>"},{"location":"bash/development/fixImgExt.html#supported-formats","title":"Supported Formats","text":"Format Extensions Description JPEG <code>.jpeg</code>, <code>.jpg</code> Standard photo format PNG <code>.png</code> Lossless web format GIF <code>.gif</code> Animated/web graphics TIFF <code>.tif</code>, <code>.tiff</code> Professional/print format BMP <code>.bmp</code> Windows bitmap PSD <code>.psd</code> Adobe Photoshop XCF <code>.xcf</code> GIMP native format SVG <code>.svg</code> Vector graphics WebM <code>.webm</code> Web video/animation"},{"location":"bash/development/fixImgExt.html#how-it-works","title":"How It Works","text":""},{"location":"bash/development/fixImgExt.html#file-analysis-process","title":"File Analysis Process","text":"<ol> <li>Input Validation: Verifies file/directory exists and is accessible</li> <li>Content Detection: Uses <code>file</code> command to determine actual format</li> <li>Extension Matching: Compares current extension with detected format</li> <li>Conflict Resolution: Handles naming conflicts with incremental naming</li> <li>Safe Renaming: Performs the file rename operation</li> <li>Logging: Records changes if verbose logging enabled</li> </ol>"},{"location":"bash/development/fixImgExt.html#directory-processing_1","title":"Directory Processing","text":"<ol> <li>Path Traversal: Walks through directory structure (recursive if <code>-r</code> specified)</li> <li>File Filtering: Processes all files, not just those with image extensions</li> <li>Batch Processing: Handles multiple files efficiently</li> <li>Progress Reporting: Provides feedback on processing status</li> </ol>"},{"location":"bash/development/fixImgExt.html#configuration","title":"Configuration","text":""},{"location":"bash/development/fixImgExt.html#logging-configuration","title":"Logging Configuration","text":"<ul> <li>Log File: <code>fixImgExt_info.txt</code> in current directory</li> <li>Log Format: Lists all successfully corrected files</li> <li>Append Mode: Each run appends to existing log file</li> </ul>"},{"location":"bash/development/fixImgExt.html#processing-options","title":"Processing Options","text":"<ul> <li>Recursive Mode: Process subdirectories when using <code>-d</code> option</li> <li>Verbose Mode: Show detailed file information during processing</li> <li>Logging Mode: Record all successful corrections to log file</li> </ul>"},{"location":"bash/development/fixImgExt.html#output-examples","title":"Output Examples","text":""},{"location":"bash/development/fixImgExt.html#standard-output","title":"Standard Output","text":"<pre><code>Corrected!    /path/to/file.wrong    /path/to/file.jpg\nInfo!         No change needed       file.png\nWarning!      Currently supported formats: JPEG, GIF, PNG, TIFF, BMP, GIMP XCF, PSD, SVG, WebM\n</code></pre>"},{"location":"bash/development/fixImgExt.html#detailed-output-with-s","title":"Detailed Output (with <code>-s</code>)","text":"<pre><code>---------------------------------------------------------------------------------------\n  file path:-               /Users/alex/image.wrong\n  dir:-                     /Users/alex\n  file name with ext:-      image.wrong\n  file name:-               image\n---------------------------------------------------------------------------------------\nCorrected!    /Users/alex/image.wrong    /Users/alex/image.jpg\n</code></pre>"},{"location":"bash/development/fixImgExt.html#log-file-content-with-v","title":"Log File Content (with <code>-v</code>)","text":"<pre><code>--------------------------------NEW RUN--------------------------------\n/Users/alex/Pictures/photo.jpg\n/Users/alex/Pictures/graphic.png\n/Users/alex/Pictures/design.psd\n</code></pre>"},{"location":"bash/development/fixImgExt.html#integration","title":"Integration","text":""},{"location":"bash/development/fixImgExt.html#with-media-workflows","title":"With Media Workflows","text":"<pre><code># Process camera imports\n./fixImgExt.sh -d -r -v ~/Pictures/$(date +%Y-%m)/\n\n# Clean up download directory\n./fixImgExt.sh -d -v ~/Downloads/\n</code></pre>"},{"location":"bash/development/fixImgExt.html#automated-processing","title":"Automated Processing","text":"<pre><code>#!/bin/bash\n# Daily image cleanup script\nIMPORT_DIR=\"~/Pictures/Daily_Import\"\nLOG_FILE=\"/var/log/image_fixes.log\"\n\n./fixImgExt.sh -d -r -v \"$IMPORT_DIR\"\necho \"$(date): Processed $IMPORT_DIR\" &gt;&gt; \"$LOG_FILE\"\n</code></pre>"},{"location":"bash/development/fixImgExt.html#project-workflows","title":"Project Workflows","text":"<pre><code># Fix extensions in design project\n./fixImgExt.sh -d -r -s ~/Projects/client_work/assets/\n\n# Process web asset directory\n./fixImgExt.sh -d -v ~/Web_Projects/images/\n</code></pre>"},{"location":"bash/development/fixImgExt.html#best-practices","title":"Best Practices","text":""},{"location":"bash/development/fixImgExt.html#before-processing","title":"Before Processing","text":"<ol> <li>Backup Important Files: Make backups before batch processing</li> <li>Test on Small Set: Try on a few files before large batch operations</li> <li>Check Permissions: Ensure write access to target directories</li> <li>Review File Types: Understand what formats you're working with</li> </ol>"},{"location":"bash/development/fixImgExt.html#during-processing","title":"During Processing","text":"<ol> <li>Use Verbose Mode: Enable <code>-v</code> for logging important changes</li> <li>Monitor Output: Watch for warnings about unsupported formats</li> <li>Check Progress: Use <code>-s</code> for detailed view on complex operations</li> <li>Handle Conflicts: Be aware of incremental naming for duplicates</li> </ol>"},{"location":"bash/development/fixImgExt.html#after-processing","title":"After Processing","text":"<ol> <li>Review Log File: Check <code>fixImgExt_info.txt</code> for list of changes</li> <li>Verify Results: Spot-check corrected files</li> <li>Clean Up: Remove log file if no longer needed</li> <li>Document Changes: Keep record of batch operations performed</li> </ol>"},{"location":"bash/development/fixImgExt.html#error-handling","title":"Error Handling","text":""},{"location":"bash/development/fixImgExt.html#input-validation","title":"Input Validation","text":"<ul> <li>File Existence: Verifies files exist before processing</li> <li>Directory Access: Checks directory permissions</li> <li>Path Safety: Prevents directory traversal attacks</li> </ul>"},{"location":"bash/development/fixImgExt.html#processing-errors","title":"Processing Errors","text":"<ul> <li>Unsupported Formats: Clear warnings for unrecognized file types</li> <li>Permission Issues: Graceful handling of read-only files</li> <li>Naming Conflicts: Automatic resolution with incremental naming</li> </ul>"},{"location":"bash/development/fixImgExt.html#troubleshooting","title":"Troubleshooting","text":""},{"location":"bash/development/fixImgExt.html#no-changes-made","title":"No Changes Made","text":"<ul> <li>Check that files actually have incorrect extensions</li> <li>Verify file formats are supported</li> <li>Ensure write permissions in target directory</li> </ul>"},{"location":"bash/development/fixImgExt.html#permission-denied-errors","title":"Permission Denied Errors","text":"<ul> <li>Run with appropriate file system permissions</li> <li>Check that files are not locked by other applications</li> <li>Verify directory write access</li> </ul>"},{"location":"bash/development/fixImgExt.html#unexpected-results","title":"Unexpected Results","text":"<ul> <li>Some files may have ambiguous formats</li> <li>Hidden files or system files may be processed</li> <li>Network drives may have slower performance</li> </ul>"},{"location":"bash/development/fixImgExt.html#technical-details","title":"Technical Details","text":""},{"location":"bash/development/fixImgExt.html#dependencies","title":"Dependencies","text":"<ul> <li>file: Unix file type detection command</li> <li>bash: Modern bash shell with getopts support</li> <li>Shared Libraries: Uses common.sh for validation functions</li> </ul>"},{"location":"bash/development/fixImgExt.html#security-considerations","title":"Security Considerations","text":"<ul> <li>Path Validation: All file paths validated for safety</li> <li>No Arbitrary Execution: No dynamic command construction</li> <li>Safe Renaming: Atomic file operations where possible</li> </ul>"},{"location":"bash/development/fixImgExt.html#original-attribution","title":"Original Attribution","text":"<ul> <li>Original script by \"Ten Elite Brains\" atqueensu@gmail.com</li> <li>Enhanced by Alexander Kucera / babylondreams.de</li> </ul>"},{"location":"bash/development/fixImgExt.html#see-also","title":"See Also","text":"<ul> <li>Media Processing Tools - Related media utilities</li> <li>Common Functions - Shared validation functions</li> <li>Development Tools Overview - Other development utilities</li> </ul> <p>Script Location: <code>bash/development/fixImgExt.sh</code> Original Author: Ten Elite Brains Enhanced by: Alexander Kucera / babylondreams.de</p>"},{"location":"bash/development/version_up.html","title":"Version Incrementer (version_up.sh)","text":"<p>Automatically increment version numbers in version files with timestamp tracking and history maintenance.</p>"},{"location":"bash/development/version_up.html#overview","title":"Overview","text":"<p>The <code>version_up.sh</code> script provides automated version number management for projects. It intelligently increments semantic version numbers, maintains version history with timestamps, and creates new version files when needed. Perfect for release automation and project version tracking.</p>"},{"location":"bash/development/version_up.html#usage","title":"Usage","text":"<pre><code>version_up.sh [version_file]\n</code></pre>"},{"location":"bash/development/version_up.html#arguments","title":"Arguments","text":"Argument Type Description <code>version_file</code> Optional Path to version file (default: <code>version.txt</code>)"},{"location":"bash/development/version_up.html#options","title":"Options","text":"Option Description <code>-h, --help</code> Show help message and exit"},{"location":"bash/development/version_up.html#examples","title":"Examples","text":""},{"location":"bash/development/version_up.html#basic-usage","title":"Basic Usage","text":"<pre><code># Increment version in default version.txt file\n./version_up.sh\n\n# Increment version in custom file\n./version_up.sh my_version.txt\n\n# Increment project-specific version\n./version_up.sh ~/Projects/myapp/VERSION\n</code></pre>"},{"location":"bash/development/version_up.html#development-workflow","title":"Development Workflow","text":"<pre><code># Pre-release version bump\n./version_up.sh src/version.txt\n\n# Build automation integration\n./version_up.sh &amp;&amp; make build\n\n# Multiple project management\n./version_up.sh frontend/version.txt\n./version_up.sh backend/version.txt\n./version_up.sh api/version.txt\n</code></pre>"},{"location":"bash/development/version_up.html#automation-scripts","title":"Automation Scripts","text":"<pre><code>#!/bin/bash\n# Release preparation script\n./version_up.sh\nNEW_VERSION=$(head -n 1 version.txt | cut -d' ' -f1)\necho \"Building release $NEW_VERSION\"\ngit add version.txt\ngit commit -m \"Bump version to $NEW_VERSION\"\ngit tag \"v$NEW_VERSION\"\n</code></pre>"},{"location":"bash/development/version_up.html#features","title":"Features","text":""},{"location":"bash/development/version_up.html#smart-version-management","title":"\ud83d\udd22 Smart Version Management","text":"<ul> <li>Semantic Versioning: Supports standard major.minor.patch format</li> <li>Intelligent Incrementing: Automatically increments the patch number</li> <li>Flexible Formats: Handles various version number formats</li> <li>History Preservation: Maintains complete version history</li> </ul>"},{"location":"bash/development/version_up.html#timestamp-tracking","title":"\ud83d\udcc5 Timestamp Tracking","text":"<ul> <li>Automatic Dating: Adds timestamp to each version entry</li> <li>ISO Format: Uses standard YYYY-MM-DD date format</li> <li>History Maintenance: Keeps chronological record of all versions</li> <li>Audit Trail: Complete history of when versions were created</li> </ul>"},{"location":"bash/development/version_up.html#safety-features","title":"\ud83d\udee1\ufe0f Safety Features","text":"<ul> <li>Format Validation: Validates version format before processing</li> <li>File Creation: Creates new version file if none exists</li> <li>Backup Preservation: Maintains existing version history</li> <li>Input Validation: Comprehensive validation of version formats</li> </ul>"},{"location":"bash/development/version_up.html#version-format-support","title":"Version Format Support","text":""},{"location":"bash/development/version_up.html#supported-formats","title":"Supported Formats","text":"<ul> <li><code>1.0.0</code> - Standard semantic versioning</li> <li><code>2.15.3</code> - Major.minor.patch</li> <li><code>0.1.0</code> - Pre-release versions</li> <li><code>10.20.30</code> - Large version numbers</li> </ul>"},{"location":"bash/development/version_up.html#version-increment-logic","title":"Version Increment Logic","text":"<pre><code>1.0.0 \u2192 1.0.1\n1.2.9 \u2192 1.2.10\n9.9.9 \u2192 9.9.10\n</code></pre> <p>The script automatically handles: - Carry Logic: Proper handling of digit overflow - Leading Zeros: Maintains consistent formatting - Patch Increment: Always increments the rightmost number</p>"},{"location":"bash/development/version_up.html#how-it-works","title":"How It Works","text":""},{"location":"bash/development/version_up.html#version-processing","title":"Version Processing","text":"<ol> <li>File Validation: Checks if version file exists, creates if needed</li> <li>Format Parsing: Reads and validates current version format</li> <li>Increment Calculation: Applies smart increment logic</li> <li>Timestamp Addition: Adds current date to new version</li> <li>History Update: Prepends new version to history</li> <li>File Writing: Saves updated version file</li> </ol>"},{"location":"bash/development/version_up.html#default-initialization","title":"Default Initialization","text":"<p>If no version file exists, creates one with: <pre><code>1.0.0 - 2025-07-05\n</code></pre></p>"},{"location":"bash/development/version_up.html#file-format","title":"File Format","text":""},{"location":"bash/development/version_up.html#version-file-structure","title":"Version File Structure","text":"<pre><code>1.2.1 - 2025-07-05\n1.2.0 - 2025-07-01\n1.1.9 - 2025-06-28\n1.1.8 - 2025-06-25\n</code></pre> <p>Each line contains: - Version Number: Semantic version in major.minor.patch format - Separator: <code>-</code> (space-dash-space) - Date: ISO format date (YYYY-MM-DD)</p>"},{"location":"bash/development/version_up.html#output-examples","title":"Output Examples","text":""},{"location":"bash/development/version_up.html#successful-execution","title":"Successful Execution","text":"<pre><code>Version incrementer working in: /Users/alex/Projects/myapp\nCurrent version: 1.2.0\nNew version: 1.2.1\nDate stamp: - 2025-07-05\n\u2713 Version updated successfully!\nVersion file updated: version.txt\n\nUpdated version history:\n  1.2.1 - 2025-07-05\n  1.2.0 - 2025-07-01\n  1.1.9 - 2025-06-28\n  1.1.8 - 2025-06-25\n  1.1.7 - 2025-06-20\n</code></pre>"},{"location":"bash/development/version_up.html#new-file-creation","title":"New File Creation","text":"<pre><code>Version incrementer working in: /Users/alex/Projects/newapp\nCreating new version file with initial version 1.0.0\nCurrent version: 1.0.0\nNew version: 1.0.1\n\u2713 Version updated successfully!\n</code></pre>"},{"location":"bash/development/version_up.html#configuration","title":"Configuration","text":""},{"location":"bash/development/version_up.html#environment-variables","title":"Environment Variables","text":"<p>No environment variables required. All configuration through file paths.</p>"},{"location":"bash/development/version_up.html#working-directory","title":"Working Directory","text":"<ul> <li>Script operates in the directory where it's executed</li> <li>Version files created/updated relative to current directory</li> <li>Reports working directory for confirmation</li> </ul>"},{"location":"bash/development/version_up.html#integration","title":"Integration","text":""},{"location":"bash/development/version_up.html#build-automation","title":"Build Automation","text":"<pre><code># Makefile integration\nversion:\n    ./version_up.sh\n    @echo \"New version: $$(head -n 1 version.txt | cut -d' ' -f1)\"\n\nrelease: version\n    @echo \"Building release...\"\n    # Build commands here\n</code></pre>"},{"location":"bash/development/version_up.html#git-workflows","title":"Git Workflows","text":"<pre><code>#!/bin/bash\n# Git release workflow\n./version_up.sh\nVERSION=$(head -n 1 version.txt | cut -d' ' -f1)\n\ngit add version.txt\ngit commit -m \"Bump version to $VERSION\"\ngit tag \"v$VERSION\"\ngit push origin main --tags\n</code></pre>"},{"location":"bash/development/version_up.html#cicd-integration","title":"CI/CD Integration","text":"<pre><code># GitHub Actions / CI integration\n- name: Increment Version\n  run: |\n    ./version_up.sh\n    echo \"NEW_VERSION=$(head -n 1 version.txt | cut -d' ' -f1)\" &gt;&gt; $GITHUB_ENV\n\n- name: Create Release\n  run: |\n    echo \"Creating release for version $NEW_VERSION\"\n</code></pre>"},{"location":"bash/development/version_up.html#multi-project-management","title":"Multi-Project Management","text":"<pre><code>#!/bin/bash\n# Update versions across multiple projects\nPROJECTS=(\"frontend\" \"backend\" \"api\" \"docs\")\n\nfor project in \"${PROJECTS[@]}\"; do\n    echo \"Updating $project version...\"\n    ./version_up.sh \"$project/version.txt\"\ndone\n</code></pre>"},{"location":"bash/development/version_up.html#best-practices","title":"Best Practices","text":""},{"location":"bash/development/version_up.html#version-file-management","title":"Version File Management","text":"<ol> <li>Consistent Location: Keep version files in predictable locations</li> <li>Version Control: Always commit version file changes</li> <li>Backup Strategy: Ensure version files are backed up</li> <li>Documentation: Document version increment policies</li> </ol>"},{"location":"bash/development/version_up.html#release-workflows","title":"Release Workflows","text":"<ol> <li>Pre-Release Testing: Test thoroughly before version increment</li> <li>Atomic Operations: Combine version increment with related tasks</li> <li>Tag Creation: Create git tags for version milestones</li> <li>Changelog Updates: Update changelogs alongside version increments</li> </ol>"},{"location":"bash/development/version_up.html#automation-guidelines","title":"Automation Guidelines","text":"<ol> <li>Script Integration: Integrate with build and release scripts</li> <li>Error Handling: Handle version increment failures gracefully</li> <li>Validation: Verify version format before automated increments</li> <li>Logging: Log version changes for audit purposes</li> </ol>"},{"location":"bash/development/version_up.html#error-handling","title":"Error Handling","text":""},{"location":"bash/development/version_up.html#input-validation","title":"Input Validation","text":"<ul> <li>File Format: Validates version file format before processing</li> <li>Version Format: Ensures version follows expected pattern</li> <li>File Permissions: Checks write access to version file</li> <li>Directory Access: Validates working directory access</li> </ul>"},{"location":"bash/development/version_up.html#error-scenarios","title":"Error Scenarios","text":"<ul> <li>Invalid Format: \"Invalid version format in version.txt: 'bad-format'\"</li> <li>Permission Denied: \"Failed to update version file\"</li> <li>Missing Directory: Script reports working directory and creates files appropriately</li> </ul>"},{"location":"bash/development/version_up.html#troubleshooting","title":"Troubleshooting","text":""},{"location":"bash/development/version_up.html#version-format-issues","title":"Version Format Issues","text":"<ul> <li>Ensure version follows major.minor.patch format</li> <li>Check for extra characters or spaces in version file</li> <li>Verify file encoding (should be plain text)</li> </ul>"},{"location":"bash/development/version_up.html#file-permission-problems","title":"File Permission Problems","text":"<ul> <li>Check write permissions on version file and directory</li> <li>Ensure version file is not locked by other applications</li> <li>Verify disk space for file updates</li> </ul>"},{"location":"bash/development/version_up.html#integration-issues","title":"Integration Issues","text":"<ul> <li>Test version increment manually before automation</li> <li>Verify file paths in automated scripts</li> <li>Check that working directory is correct</li> </ul>"},{"location":"bash/development/version_up.html#technical-details","title":"Technical Details","text":""},{"location":"bash/development/version_up.html#dependencies","title":"Dependencies","text":"<ul> <li>bash: Modern bash shell</li> <li>date: Standard Unix date command</li> <li>Shared Libraries: Uses common.sh for utility functions</li> </ul>"},{"location":"bash/development/version_up.html#algorithm-details","title":"Algorithm Details","text":"<pre><code># Version increment logic (simplified)\ndeclare -a part=( ${version//\\./ } )  # Split by dots\ndeclare -i carry=1\n\nfor (( CNTR=${#part[@]}-1; CNTR&gt;=0; CNTR-=1 )); do\n    new=$((part[CNTR]+carry))\n    # Handle overflow and carry logic\ndone\n</code></pre>"},{"location":"bash/development/version_up.html#security-considerations","title":"Security Considerations","text":"<ul> <li>Path Validation: All file paths validated before use</li> <li>Safe File Operations: Atomic file operations where possible</li> <li>Input Sanitization: Version format strictly validated</li> </ul>"},{"location":"bash/development/version_up.html#see-also","title":"See Also","text":"<ul> <li>App Builder - Create apps with version management</li> <li>Common Functions - Shared utility functions</li> <li>Development Tools Overview - Related development utilities</li> </ul> <p>Script Location: <code>bash/development/version_up.sh</code> Author: Alexander Kucera / babylondreams.de</p>"},{"location":"bash/lib/common.html","title":"Common Functions Library (common.sh)","text":"<p>Core utility functions providing validation, timestamps, logging, and cross-platform compatibility for all bash scripts.</p>"},{"location":"bash/lib/common.html#overview","title":"Overview","text":"<p>The common functions library provides essential utilities used across all bash scripts, including input validation, timestamp generation, logging capabilities, and platform detection. This library ensures consistent behavior and reduces code duplication.</p>"},{"location":"bash/lib/common.html#key-functions","title":"Key Functions","text":""},{"location":"bash/lib/common.html#validation-functions","title":"Validation Functions","text":""},{"location":"bash/lib/common.html#validate_file","title":"<code>validate_file()</code>","text":"<p><pre><code>validate_file \"path/to/file\" \"description\"\n</code></pre> Validates that a file exists and is readable.</p> <ul> <li>Parameters: file_path, description</li> <li>Returns: 0 if valid, 1 if invalid</li> <li>Features: Comprehensive error reporting, path safety checks</li> </ul>"},{"location":"bash/lib/common.html#validate_directory","title":"<code>validate_directory()</code>","text":"<p><pre><code>validate_directory \"path/to/dir\" \"description\"\n</code></pre> Validates that a directory exists and is accessible.</p> <ul> <li>Parameters: directory_path, description</li> <li>Returns: 0 if valid, 1 if invalid</li> <li>Features: Permission checking, clear error messages</li> </ul>"},{"location":"bash/lib/common.html#validate_command","title":"<code>validate_command()</code>","text":"<p><pre><code>validate_command \"ffmpeg\" \"FFmpeg\"\n</code></pre> Validates that a command is available in the system PATH.</p> <ul> <li>Parameters: command_name, display_name</li> <li>Returns: 0 if available, 1 if missing</li> <li>Features: Installation guidance, dependency checking</li> </ul>"},{"location":"bash/lib/common.html#timestamp-functions","title":"Timestamp Functions","text":""},{"location":"bash/lib/common.html#get_timestamp","title":"<code>get_timestamp()</code>","text":"<p><pre><code>timestamp=$(get_timestamp)\n</code></pre> Generates formatted timestamps for logging and reporting.</p> <ul> <li>Returns: Formatted timestamp string</li> <li>Format: \"Monday, 05.07.2025 13:45:30\"</li> <li>Cross-platform: Works on macOS and Linux</li> </ul>"},{"location":"bash/lib/common.html#calculate_duration","title":"<code>calculate_duration()</code>","text":"<p><pre><code>duration=$(calculate_duration \"$start_time\" \"$end_time\")\n</code></pre> Calculates formatted duration between two timestamps.</p> <ul> <li>Parameters: start_epoch, end_epoch</li> <li>Returns: Formatted duration (e.g., \"2h:35m:42s\")</li> <li>Features: Human-readable format, zero-padding</li> </ul>"},{"location":"bash/lib/common.html#logging-functions","title":"Logging Functions","text":""},{"location":"bash/lib/common.html#log_message","title":"<code>log_message()</code>","text":"<p><pre><code>log_message \"Important event occurred\" \"app.log\"\n</code></pre> Writes timestamped messages to log files.</p> <ul> <li>Parameters: message, log_filename</li> <li>Features: Automatic timestamping, safe file operations</li> <li>Location: Logs written to current directory</li> </ul>"},{"location":"bash/lib/common.html#utility-functions","title":"Utility Functions","text":""},{"location":"bash/lib/common.html#get_script_dir","title":"<code>get_script_dir()</code>","text":"<p><pre><code>script_directory=$(get_script_dir)\n</code></pre> Returns the directory containing the calling script.</p> <ul> <li>Returns: Absolute path to script directory</li> <li>Use Cases: Relative path resolution, resource location</li> </ul>"},{"location":"bash/lib/common.html#parse_filename","title":"<code>parse_filename()</code>","text":"<p><pre><code>parse_filename \"/path/to/file.ext\" basename extension\n</code></pre> Safely parses filename components.</p> <ul> <li>Parameters: filepath, basename_var, extension_var</li> <li>Features: Extension extraction, path handling</li> </ul>"},{"location":"bash/lib/common.html#platform-detection","title":"Platform Detection","text":""},{"location":"bash/lib/common.html#is_macos","title":"<code>is_macos()</code>","text":"<p><pre><code>if is_macos; then\n    echo \"Running on macOS\"\nfi\n</code></pre> Detects macOS platform for platform-specific operations.</p> <ul> <li>Returns: 0 if macOS, 1 if other platform</li> <li>Use Cases: Platform-specific command selection</li> </ul>"},{"location":"bash/lib/common.html#is_linux","title":"<code>is_linux()</code>","text":"<p><pre><code>if is_linux; then\n    echo \"Running on Linux\"\nfi\n</code></pre> Detects Linux platform.</p> <ul> <li>Returns: 0 if Linux, 1 if other platform</li> </ul>"},{"location":"bash/lib/common.html#usage-examples","title":"Usage Examples","text":""},{"location":"bash/lib/common.html#basic-validation","title":"Basic Validation","text":"<pre><code>#!/bin/bash\nsource \"lib/common.sh\"\n\n# Validate input file\nif ! validate_file \"$1\" \"input video\"; then\n    exit 1\nfi\n\n# Validate output directory\nif ! validate_directory \"$OUTPUT_DIR\" \"output directory\"; then\n    exit 1\nfi\n</code></pre>"},{"location":"bash/lib/common.html#logging-with-timestamps","title":"Logging with Timestamps","text":"<pre><code>#!/bin/bash\nsource \"lib/common.sh\"\n\nLOG_FILE=\"processing.log\"\n\nlog_message \"Processing started\" \"$LOG_FILE\"\n# ... processing work ...\nlog_message \"Processing completed successfully\" \"$LOG_FILE\"\n</code></pre>"},{"location":"bash/lib/common.html#duration-tracking","title":"Duration Tracking","text":"<pre><code>#!/bin/bash\nsource \"lib/common.sh\"\n\nSTART_TIME=\"$(date +%s)\"\necho \"Started at: $(get_timestamp)\"\n\n# ... long running process ...\n\nEND_TIME=\"$(date +%s)\"\nDURATION=\"$(calculate_duration \"$START_TIME\" \"$END_TIME\")\"\necho \"Completed in: $DURATION\"\n</code></pre>"},{"location":"bash/lib/common.html#cross-platform-operations","title":"Cross-Platform Operations","text":"<pre><code>#!/bin/bash\nsource \"lib/common.sh\"\n\nif is_macos; then\n    OPEN_CMD=\"open\"\n    DATE_CMD=\"date -j\"\nelif is_linux; then\n    OPEN_CMD=\"xdg-open\"\n    DATE_CMD=\"date\"\nelse\n    echo \"Unsupported platform\"\n    exit 1\nfi\n</code></pre>"},{"location":"bash/lib/common.html#error-handling","title":"Error Handling","text":"<p>All functions provide comprehensive error handling:</p> <ul> <li>Input Validation: Parameters checked before use</li> <li>Error Reporting: Clear, descriptive error messages</li> <li>Safe Defaults: Graceful handling of missing parameters</li> <li>Return Codes: Consistent 0/1 return codes for scripting</li> </ul>"},{"location":"bash/lib/common.html#security-features","title":"Security Features","text":"<ul> <li>Path Validation: All file paths validated for safety</li> <li>No Arbitrary Execution: No dynamic command construction</li> <li>Input Sanitization: All inputs sanitized before use</li> <li>Safe File Operations: Atomic file operations where possible</li> </ul>"},{"location":"bash/lib/common.html#integration","title":"Integration","text":""},{"location":"bash/lib/common.html#library-loading","title":"Library Loading","text":"<pre><code># Standard library loading pattern\nSCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" &amp;&amp; pwd)\"\nsource \"${SCRIPT_DIR}/../lib/common.sh\"\n</code></pre>"},{"location":"bash/lib/common.html#function-dependencies","title":"Function Dependencies","text":"<p>Some functions depend on others: - <code>log_message()</code> uses <code>get_timestamp()</code> - <code>calculate_duration()</code> uses cross-platform date handling - All validation functions use consistent error reporting</p>"},{"location":"bash/lib/common.html#best-practices","title":"Best Practices","text":""},{"location":"bash/lib/common.html#function-usage","title":"Function Usage","text":"<ol> <li>Always Check Return Codes: Use return codes for error handling</li> <li>Provide Descriptions: Use descriptive names in validation calls</li> <li>Log Important Events: Use logging for audit trails</li> <li>Handle Platform Differences: Use platform detection appropriately</li> </ol>"},{"location":"bash/lib/common.html#error-handling_1","title":"Error Handling","text":"<ol> <li>Validate Early: Check inputs before processing</li> <li>Fail Fast: Exit on validation errors</li> <li>Clear Messages: Provide helpful error descriptions</li> <li>Consistent Patterns: Use similar error handling across scripts</li> </ol>"},{"location":"bash/lib/common.html#see-also","title":"See Also","text":"<ul> <li>Media Functions - Media-specific utilities</li> <li>System Functions - System information functions</li> <li>Bash Scripts Overview - Integration patterns</li> </ul> <p>Script Location: <code>bash/lib/common.sh</code> Author: Alexander Kucera / babylondreams.de</p>"},{"location":"bash/lib/media_functions.html","title":"Media Functions Library (media_functions.sh)","text":"<p>Specialized functions for media processing, codec configuration, and format validation used by all media conversion scripts.</p>"},{"location":"bash/lib/media_functions.html#overview","title":"Overview","text":"<p>Provides optimized codec configurations, media file validation, and format-specific utilities for professional video and audio processing workflows. Used by all media conversion scripts to ensure consistent quality and compatibility.</p>"},{"location":"bash/lib/media_functions.html#key-functions","title":"Key Functions","text":""},{"location":"bash/lib/media_functions.html#codec-configuration","title":"Codec Configuration","text":""},{"location":"bash/lib/media_functions.html#setup_h264_codec","title":"<code>setup_h264_codec()</code>","text":"<p><pre><code>setup_h264_codec quality max_bitrate resolution\n</code></pre> Configures optimized H.264 encoding parameters.</p> <ul> <li>Parameters: quality (CRF), max_bitrate (kbps), resolution</li> <li>Returns: Sets global codec variables</li> <li>Features: Professional presets, bitrate limiting, quality optimization</li> </ul>"},{"location":"bash/lib/media_functions.html#setup_prores_codec","title":"<code>setup_prores_codec()</code>","text":"<p><pre><code>setup_prores_codec format quality resolution\n</code></pre> Configures Apple ProRes encoding parameters.</p> <ul> <li>Parameters: format (0-4), quality, resolution</li> <li>Returns: Sets ProRes-specific variables</li> <li>Formats: Proxy, LT, Standard, HQ, 4444</li> </ul>"},{"location":"bash/lib/media_functions.html#validation-functions","title":"Validation Functions","text":""},{"location":"bash/lib/media_functions.html#validate_media_file","title":"<code>validate_media_file()</code>","text":"<p><pre><code>validate_media_file \"path/to/video.mov\"\n</code></pre> Validates media files and checks format compatibility.</p> <ul> <li>Parameters: file_path</li> <li>Returns: 0 if valid, 1 if invalid</li> <li>Features: Format detection, codec verification</li> </ul>"},{"location":"bash/lib/media_functions.html#validate_sequence_pattern","title":"<code>validate_sequence_pattern()</code>","text":"<p><pre><code>validate_sequence_pattern \"frames_%04d.jpg\"\n</code></pre> Validates image sequence naming patterns.</p> <ul> <li>Parameters: sequence_pattern</li> <li>Returns: 0 if valid pattern, 1 if invalid</li> <li>Features: FFmpeg pattern validation</li> </ul>"},{"location":"bash/lib/media_functions.html#format-utilities","title":"Format Utilities","text":""},{"location":"bash/lib/media_functions.html#parse_sequence_filename","title":"<code>parse_sequence_filename()</code>","text":"<p><pre><code>parse_sequence_filename \"render_001.exr\" base_name frame_number\n</code></pre> Extracts components from sequence filenames.</p> <ul> <li>Parameters: filename, basename_var, frame_var</li> <li>Features: Frame number extraction, format identification</li> </ul>"},{"location":"bash/lib/media_functions.html#get_media_info","title":"<code>get_media_info()</code>","text":"<p><pre><code>get_media_info \"video.mov\" info_array\n</code></pre> Retrieves comprehensive media file information.</p> <ul> <li>Parameters: file_path, associative_array</li> <li>Returns: Populates array with metadata</li> <li>Information: Duration, resolution, codec, bitrate</li> </ul>"},{"location":"bash/lib/media_functions.html#codec-configurations","title":"Codec Configurations","text":""},{"location":"bash/lib/media_functions.html#h264-settings","title":"H.264 Settings","text":"<pre><code># Professional H.264 configuration\nCODEC=\"libx264\"\nPRESET=\"medium\"\nPROFILE=\"high\"\nLEVEL=\"4.0\"\nPIXEL_FORMAT=\"yuv420p\"\n</code></pre>"},{"location":"bash/lib/media_functions.html#prores-settings","title":"ProRes Settings","text":"Format Profile Quality Use Case 0 Proxy Lower quality Offline editing 1 LT Good quality Standard editing 2 Standard High quality General production 3 HQ Higher quality Professional delivery 4 4444 Highest quality VFX, alpha channel"},{"location":"bash/lib/media_functions.html#usage-examples","title":"Usage Examples","text":""},{"location":"bash/lib/media_functions.html#h264-encoding-setup","title":"H.264 Encoding Setup","text":"<pre><code>#!/bin/bash\nsource \"lib/media_functions.sh\"\n\n# Configure H.264 for web delivery\nsetup_h264_codec 22 8000 \"1280x720\"\n\n# Use configured settings\nffmpeg -i input.mov \\\n       -c:v \"$H264_CODEC\" \\\n       -crf \"$H264_QUALITY\" \\\n       -maxrate \"$H264_MAXRATE\" \\\n       -s \"$H264_RESOLUTION\" \\\n       output.mp4\n</code></pre>"},{"location":"bash/lib/media_functions.html#prores-workflow","title":"ProRes Workflow","text":"<pre><code>#!/bin/bash\nsource \"lib/media_functions.sh\"\n\n# Configure ProRes 4444 for VFX\nsetup_prores_codec 4 18 \"2048x1556\"\n\n# Validate input sequence\nif validate_sequence_pattern \"vfx_%05d.exr\"; then\n    # Process with ProRes settings\n    ffmpeg -i \"vfx_%05d.exr\" \\\n           -c:v \"$PRORES_CODEC\" \\\n           -profile:v \"$PRORES_PROFILE\" \\\n           master.mov\nfi\n</code></pre>"},{"location":"bash/lib/media_functions.html#media-validation","title":"Media Validation","text":"<pre><code>#!/bin/bash\nsource \"lib/media_functions.sh\"\n\n# Validate input media\nif validate_media_file \"$INPUT_FILE\"; then\n    echo \"\u2713 Input file validated\"\n\n    # Get media information\n    declare -A media_info\n    get_media_info \"$INPUT_FILE\" media_info\n\n    echo \"Duration: ${media_info[duration]}\"\n    echo \"Resolution: ${media_info[width]}x${media_info[height]}\"\n    echo \"Codec: ${media_info[codec]}\"\nelse\n    echo \"\u2717 Invalid input file\"\n    exit 1\nfi\n</code></pre>"},{"location":"bash/lib/media_functions.html#quality-presets","title":"Quality Presets","text":""},{"location":"bash/lib/media_functions.html#web-delivery","title":"Web Delivery","text":"<pre><code># Optimized for web streaming\nsetup_h264_codec 23 8000 \"1920x1080\"  # HD web\nsetup_h264_codec 25 5000 \"1280x720\"   # HD mobile\nsetup_h264_codec 28 2000 \"854x480\"    # SD mobile\n</code></pre>"},{"location":"bash/lib/media_functions.html#professional-delivery","title":"Professional Delivery","text":"<pre><code># Broadcast/professional quality\nsetup_h264_codec 18 15000 \"1920x1080\"  # HD broadcast\nsetup_h264_codec 16 50000 \"3840x2160\"  # 4K professional\nsetup_prores_codec 3 18 \"1920x1080\"    # ProRes HQ\n</code></pre>"},{"location":"bash/lib/media_functions.html#archivemaster","title":"Archive/Master","text":"<pre><code># Highest quality for archival\nsetup_prores_codec 4 16 \"4096x2160\"    # ProRes 4444 4K\nsetup_h264_codec 16 60000 \"3840x2160\"  # H.264 4K master\n</code></pre>"},{"location":"bash/lib/media_functions.html#format-support","title":"Format Support","text":""},{"location":"bash/lib/media_functions.html#input-formats","title":"Input Formats","text":"<ul> <li>Video: MOV, MP4, AVI, MKV, M4V</li> <li>Images: JPEG, PNG, TIFF, EXR, DPX, BMP</li> <li>Audio: WAV, AIFF, MP3, M4A, FLAC</li> </ul>"},{"location":"bash/lib/media_functions.html#output-formats","title":"Output Formats","text":"<ul> <li>H.264: MP4, MOV containers</li> <li>ProRes: MOV containers (macOS/professional)</li> <li>WebM: VP8/VP9 for web delivery</li> </ul>"},{"location":"bash/lib/media_functions.html#error-handling","title":"Error Handling","text":""},{"location":"bash/lib/media_functions.html#validation-errors","title":"Validation Errors","text":"<pre><code># File validation with error reporting\nif ! validate_media_file \"$input\"; then\n    echo \"Error: Invalid media file: $input\"\n    echo \"Supported formats: MOV, MP4, AVI, MKV\"\n    exit 1\nfi\n</code></pre>"},{"location":"bash/lib/media_functions.html#codec-errors","title":"Codec Errors","text":"<pre><code># Codec availability checking\nif ! command -v ffmpeg &gt;/dev/null 2&gt;&amp;1; then\n    echo \"Error: FFmpeg not found\"\n    echo \"Install FFmpeg to use media processing functions\"\n    exit 1\nfi\n</code></pre>"},{"location":"bash/lib/media_functions.html#performance-optimization","title":"Performance Optimization","text":""},{"location":"bash/lib/media_functions.html#multi-threading","title":"Multi-threading","text":"<pre><code># Optimize for available CPU cores\nTHREAD_COUNT=\"$(nproc 2&gt;/dev/null || sysctl -n hw.ncpu 2&gt;/dev/null || echo 4)\"\nffmpeg -threads \"$THREAD_COUNT\" ...\n</code></pre>"},{"location":"bash/lib/media_functions.html#hardware-acceleration","title":"Hardware Acceleration","text":"<pre><code># macOS VideoToolbox acceleration\nif is_macos &amp;&amp; check_videotoolbox_support; then\n    CODEC=\"h264_videotoolbox\"\nelse\n    CODEC=\"libx264\"\nfi\n</code></pre>"},{"location":"bash/lib/media_functions.html#integration","title":"Integration","text":""},{"location":"bash/lib/media_functions.html#library-dependencies","title":"Library Dependencies","text":"<pre><code># Required libraries\nsource \"${SCRIPT_DIR}/../lib/common.sh\"      # Core functions\nsource \"${SCRIPT_DIR}/../lib/media_functions.sh\"  # Media-specific\n</code></pre>"},{"location":"bash/lib/media_functions.html#cross-platform-support","title":"Cross-Platform Support","text":"<ul> <li>macOS: Native ProRes support, VideoToolbox acceleration</li> <li>Linux: Standard FFmpeg codecs, software encoding</li> <li>Windows: Compatible via WSL or native FFmpeg</li> </ul>"},{"location":"bash/lib/media_functions.html#see-also","title":"See Also","text":"<ul> <li>Common Functions - Core utility functions</li> <li>Media Processing Scripts - Scripts using these functions</li> <li>System Functions - System information utilities</li> </ul> <p>Script Location: <code>bash/lib/media_functions.sh</code> Author: Alexander Kucera / babylondreams.de</p>"},{"location":"bash/lib/system_functions.html","title":"System Functions Library (system_functions.sh)","text":"<p>System information, memory management, and platform-specific utilities for system administration and monitoring scripts.</p>"},{"location":"bash/lib/system_functions.html#overview","title":"Overview","text":"<p>Provides comprehensive system information gathering, memory management utilities, and cross-platform system operations. Used by system administration scripts for monitoring, maintenance, and automation tasks.</p>"},{"location":"bash/lib/system_functions.html#key-functions","title":"Key Functions","text":""},{"location":"bash/lib/system_functions.html#system-information","title":"System Information","text":""},{"location":"bash/lib/system_functions.html#get_system_info","title":"<code>get_system_info()</code>","text":"<p><pre><code>declare -A sys_info\nget_system_info sys_info\necho \"Hostname: ${sys_info[hostname]}\"\necho \"OS: ${sys_info[os]}\"\necho \"Architecture: ${sys_info[arch]}\"\n</code></pre> Retrieves comprehensive system information.</p> <ul> <li>Parameters: associative_array (passed by reference)</li> <li>Returns: Populates array with system details</li> <li>Information: hostname, OS version, architecture, kernel</li> </ul>"},{"location":"bash/lib/system_functions.html#get_memory_info","title":"<code>get_memory_info()</code>","text":"<p><pre><code>declare -A memory_info\nget_memory_info memory_info\necho \"Total RAM: ${memory_info[total_mb]}MB\"\necho \"Free RAM: ${memory_info[free_mb]}MB\"\necho \"Used RAM: ${memory_info[used_mb]}MB\"\n</code></pre> Retrieves detailed memory usage statistics.</p> <ul> <li>Parameters: associative_array (passed by reference)</li> <li>Returns: Memory statistics in MB</li> <li>Cross-platform: Works on macOS and Linux</li> </ul>"},{"location":"bash/lib/system_functions.html#memory-management","title":"Memory Management","text":""},{"location":"bash/lib/system_functions.html#purge_memory","title":"<code>purge_memory()</code>","text":"<p><pre><code>if purge_memory 5 15; then\n    echo \"Memory purged successfully\"\nelse\n    echo \"Memory purge not beneficial\"\nfi\n</code></pre> Intelligently purges inactive memory when beneficial.</p> <ul> <li>Parameters: min_ram_percent, min_inactive_percent</li> <li>Returns: 0 if purged, 1 if not needed</li> <li>Safety: Only purges when thresholds met</li> </ul>"},{"location":"bash/lib/system_functions.html#check_memory_pressure","title":"<code>check_memory_pressure()</code>","text":"<p><pre><code>if check_memory_pressure; then\n    echo \"System under memory pressure\"\n    # Take action\nfi\n</code></pre> Detects system memory pressure conditions.</p> <ul> <li>Returns: 0 if pressure detected, 1 if normal</li> <li>Use Cases: Proactive memory management</li> </ul>"},{"location":"bash/lib/system_functions.html#disk-management","title":"Disk Management","text":""},{"location":"bash/lib/system_functions.html#find_disk_by_label","title":"<code>find_disk_by_label()</code>","text":"<p><pre><code>device=$(find_disk_by_label \"Time Machine\")\nif [[ -n \"$device\" ]]; then\n    echo \"Found disk: $device\"\nfi\n</code></pre> Locates disk devices by volume label.</p> <ul> <li>Parameters: volume_label</li> <li>Returns: Device path (e.g., /dev/disk2s1)</li> <li>Platform: macOS-specific using diskutil</li> </ul>"},{"location":"bash/lib/system_functions.html#get_disk_usage","title":"<code>get_disk_usage()</code>","text":"<p><pre><code>declare -A disk_info\nget_disk_usage \"/\" disk_info\necho \"Available: ${disk_info[available]}GB\"\necho \"Used: ${disk_info[used_percent]}%\"\n</code></pre> Retrieves disk usage statistics.</p> <ul> <li>Parameters: mount_point, associative_array</li> <li>Returns: Usage statistics in human-readable format</li> </ul>"},{"location":"bash/lib/system_functions.html#process-management","title":"Process Management","text":""},{"location":"bash/lib/system_functions.html#check_process_running","title":"<code>check_process_running()</code>","text":"<p><pre><code>if check_process_running \"ffmpeg\"; then\n    echo \"FFmpeg is currently running\"\nfi\n</code></pre> Checks if a process is currently running.</p> <ul> <li>Parameters: process_name</li> <li>Returns: 0 if running, 1 if not</li> <li>Use Cases: Prevent concurrent operations</li> </ul>"},{"location":"bash/lib/system_functions.html#get_cpu_usage","title":"<code>get_cpu_usage()</code>","text":"<p><pre><code>cpu_percent=$(get_cpu_usage)\necho \"CPU Usage: ${cpu_percent}%\"\n</code></pre> Retrieves current CPU usage percentage.</p> <ul> <li>Returns: CPU usage as percentage</li> <li>Cross-platform: Adapted for different OS</li> </ul>"},{"location":"bash/lib/system_functions.html#application-management","title":"Application Management","text":""},{"location":"bash/lib/system_functions.html#list_applications","title":"<code>list_applications()</code>","text":"<p><pre><code>declare -a apps\nlist_applications apps\nfor app in \"${apps[@]}\"; do\n    echo \"Installed: $app\"\ndone\n</code></pre> Lists installed applications by category.</p> <ul> <li>Parameters: array (passed by reference)</li> <li>Returns: Array of application names</li> <li>Sources: /Applications, ~/Applications, Homebrew</li> </ul>"},{"location":"bash/lib/system_functions.html#check_homebrew_packages","title":"<code>check_homebrew_packages()</code>","text":"<p><pre><code>declare -a packages\ncheck_homebrew_packages packages\necho \"Homebrew packages: ${#packages[@]}\"\n</code></pre> Lists Homebrew packages and casks.</p> <ul> <li>Parameters: array (passed by reference)</li> <li>Returns: Array of package names</li> <li>Types: Both packages and casks</li> </ul>"},{"location":"bash/lib/system_functions.html#usage-examples","title":"Usage Examples","text":""},{"location":"bash/lib/system_functions.html#system-monitoring","title":"System Monitoring","text":"<pre><code>#!/bin/bash\nsource \"lib/system_functions.sh\"\n\n# Get system information\ndeclare -A sys_info\nget_system_info sys_info\n\necho \"System Report\"\necho \"=============\"\necho \"Host: ${sys_info[hostname]}\"\necho \"OS: ${sys_info[os_version]}\"\necho \"Uptime: ${sys_info[uptime]}\"\n\n# Memory status\ndeclare -A mem_info\nget_memory_info mem_info\necho \"Memory: ${mem_info[used_mb]}/${mem_info[total_mb]}MB\"\n</code></pre>"},{"location":"bash/lib/system_functions.html#automated-memory-management","title":"Automated Memory Management","text":"<pre><code>#!/bin/bash\nsource \"lib/system_functions.sh\"\n\n# Check memory pressure\nif check_memory_pressure; then\n    echo \"Memory pressure detected\"\n\n    # Get current memory info\n    declare -A mem_info\n    get_memory_info mem_info\n\n    # Purge if beneficial (5% free, 15% inactive minimum)\n    if purge_memory 5 15; then\n        echo \"Memory purged\"\n\n        # Get updated info\n        get_memory_info mem_info\n        echo \"Free memory after purge: ${mem_info[free_mb]}MB\"\n    else\n        echo \"Memory purge not beneficial\"\n    fi\nfi\n</code></pre>"},{"location":"bash/lib/system_functions.html#disk-space-monitoring","title":"Disk Space Monitoring","text":"<pre><code>#!/bin/bash\nsource \"lib/system_functions.sh\"\n\n# Check multiple mount points\nfor mount in \"/\" \"/var\" \"/tmp\"; do\n    if [[ -d \"$mount\" ]]; then\n        declare -A disk_info\n        get_disk_usage \"$mount\" disk_info\n\n        echo \"$mount: ${disk_info[used_percent]}% used\"\n\n        if [[ \"${disk_info[used_percent]%\\%}\" -gt 90 ]]; then\n            echo \"Warning: $mount is over 90% full\"\n        fi\n    fi\ndone\n</code></pre>"},{"location":"bash/lib/system_functions.html#application-inventory","title":"Application Inventory","text":"<pre><code>#!/bin/bash\nsource \"lib/system_functions.sh\"\n\necho \"Application Inventory\"\necho \"====================\"\n\n# System applications\ndeclare -a apps\nlist_applications apps\necho \"Applications found: ${#apps[@]}\"\n\n# Homebrew packages\ndeclare -a packages\ncheck_homebrew_packages packages\necho \"Homebrew packages: ${#packages[@]}\"\n</code></pre>"},{"location":"bash/lib/system_functions.html#cross-platform-support","title":"Cross-Platform Support","text":""},{"location":"bash/lib/system_functions.html#macos-specific-functions","title":"macOS-Specific Functions","text":"<ul> <li><code>find_disk_by_label()</code> - Uses diskutil</li> <li><code>purge_memory()</code> - Uses macOS purge command</li> <li><code>get_memory_info()</code> - Uses vm_stat</li> </ul>"},{"location":"bash/lib/system_functions.html#linux-specific-functions","title":"Linux-Specific Functions","text":"<ul> <li>Memory functions use /proc/meminfo</li> <li>Disk functions use df and lsblk</li> <li>Process functions use ps and proc filesystem</li> </ul>"},{"location":"bash/lib/system_functions.html#universal-functions","title":"Universal Functions","text":"<ul> <li><code>get_system_info()</code> - Adapts to platform</li> <li><code>check_process_running()</code> - Uses ps command</li> <li><code>get_cpu_usage()</code> - Platform-appropriate methods</li> </ul>"},{"location":"bash/lib/system_functions.html#performance-considerations","title":"Performance Considerations","text":""},{"location":"bash/lib/system_functions.html#memory-operations","title":"Memory Operations","text":"<ul> <li>Functions cache results when appropriate</li> <li>Expensive operations (like disk enumeration) minimized</li> <li>Memory info gathering optimized for frequent calls</li> </ul>"},{"location":"bash/lib/system_functions.html#process-monitoring","title":"Process Monitoring","text":"<ul> <li>Efficient process checking using appropriate tools</li> <li>Minimal overhead for status checks</li> <li>Batch operations when possible</li> </ul>"},{"location":"bash/lib/system_functions.html#error-handling","title":"Error Handling","text":""},{"location":"bash/lib/system_functions.html#graceful-degradation","title":"Graceful Degradation","text":"<pre><code># Handle missing tools gracefully\nif ! command -v diskutil &gt;/dev/null 2&gt;&amp;1; then\n    echo \"Warning: diskutil not available (macOS only)\"\n    return 1\nfi\n</code></pre>"},{"location":"bash/lib/system_functions.html#platform-detection","title":"Platform Detection","text":"<pre><code># Adapt to platform capabilities\nif is_macos; then\n    # macOS-specific implementation\nelif is_linux; then\n    # Linux-specific implementation\nelse\n    echo \"Unsupported platform\"\n    return 1\nfi\n</code></pre>"},{"location":"bash/lib/system_functions.html#security-considerations","title":"Security Considerations","text":"<ul> <li>Safe Command Execution: No arbitrary command construction</li> <li>Input Validation: All parameters validated</li> <li>Privilege Awareness: Functions respect user privileges</li> <li>Path Safety: All file operations use validated paths</li> </ul>"},{"location":"bash/lib/system_functions.html#see-also","title":"See Also","text":"<ul> <li>Common Functions - Core utility functions</li> <li>System Administration Scripts - Scripts using these functions</li> <li>Memory Purge Loop - Automated memory management</li> </ul> <p>Script Location: <code>bash/lib/system_functions.sh</code> Author: Alexander Kucera / babylondreams.de</p>"},{"location":"bash/lib/writeToLogAndEcho.html","title":"Log and Echo Utilities (writeToLogAndEcho.sh)","text":"<p>Simple logging utilities for writing messages to both console and log files, with flexible configuration options.</p>"},{"location":"bash/lib/writeToLogAndEcho.html#overview","title":"Overview","text":"<p>Provides convenient functions for dual output (console + log file) and log-only output. Based on proven patterns for bash logging, enhanced with modern error handling and configuration validation.</p>"},{"location":"bash/lib/writeToLogAndEcho.html#functions","title":"Functions","text":""},{"location":"bash/lib/writeToLogAndEcho.html#logmessage","title":"<code>log(message)</code>","text":"<p>Writes a message to the log file only.</p> <pre><code>log \"Processing started at $(date)\"\n</code></pre>"},{"location":"bash/lib/writeToLogAndEcho.html#messagemessage","title":"<code>message(message)</code>","text":"<p>Writes a message to both console and log file.</p> <pre><code>message \"Processing completed successfully\"\n</code></pre>"},{"location":"bash/lib/writeToLogAndEcho.html#usage","title":"Usage","text":""},{"location":"bash/lib/writeToLogAndEcho.html#as-sourced-library","title":"As Sourced Library","text":"<pre><code>#!/bin/bash\nsource \"lib/writeToLogAndEcho.sh\"\n\n# Set log file (optional - has default)\nexport LOG_FILE=\"/var/log/myapp.log\"\n\n# Log-only message\nlog \"Background process started\"\n\n# Console and log message\nmessage \"User action completed\"\n</code></pre>"},{"location":"bash/lib/writeToLogAndEcho.html#as-standalone-script","title":"As Standalone Script","text":"<pre><code># Run for demonstration\n./writeToLogAndEcho.sh\n\n# Shows example usage:\n# \"Echoed to console only\"\n# \"Written to log file only\"\n# \"To console and log\"\n</code></pre>"},{"location":"bash/lib/writeToLogAndEcho.html#configuration","title":"Configuration","text":""},{"location":"bash/lib/writeToLogAndEcho.html#environment-variables","title":"Environment Variables","text":""},{"location":"bash/lib/writeToLogAndEcho.html#log_file","title":"<code>LOG_FILE</code>","text":"<p>Sets the target log file location.</p> <pre><code>export LOG_FILE=\"/var/log/application.log\"\nexport LOG_FILE=\"${HOME}/logs/debug.log\"\nexport LOG_FILE=\"./processing.log\"\n</code></pre> <p>Default: <code>${HOME}/script.log</code> if not set</p>"},{"location":"bash/lib/writeToLogAndEcho.html#directory-validation","title":"Directory Validation","text":"<p>The script automatically: - Validates the log file directory exists - Creates parent directories if needed (when possible) - Reports errors for invalid log locations</p>"},{"location":"bash/lib/writeToLogAndEcho.html#examples","title":"Examples","text":""},{"location":"bash/lib/writeToLogAndEcho.html#application-logging","title":"Application Logging","text":"<pre><code>#!/bin/bash\nsource \"lib/writeToLogAndEcho.sh\"\n\nexport LOG_FILE=\"/var/log/backup.log\"\n\nmessage \"=== Backup Process Started ===\"\nlog \"Backup configuration loaded\"\n\nfor file in ~/Documents/*; do\n    log \"Processing: $file\"\n    # ... backup logic ...\ndone\n\nmessage \"=== Backup Process Completed ===\"\n</code></pre>"},{"location":"bash/lib/writeToLogAndEcho.html#debug-logging","title":"Debug Logging","text":"<pre><code>#!/bin/bash\nsource \"lib/writeToLogAndEcho.sh\"\n\nexport LOG_FILE=\"./debug_$(date +%Y%m%d).log\"\n\nmessage \"Debug session started\"\n\n# Verbose logging for troubleshooting\nlog \"Variable state: INPUT_DIR=$INPUT_DIR\"\nlog \"Environment: PATH=$PATH\"\n\nmessage \"Processing step 1\"\nlog \"Step 1: Validating inputs\"\n# ... processing ...\n\nmessage \"All steps completed\"\n</code></pre>"},{"location":"bash/lib/writeToLogAndEcho.html#service-integration","title":"Service Integration","text":"<pre><code>#!/bin/bash\n# Service startup script\nsource \"lib/writeToLogAndEcho.sh\"\n\nexport LOG_FILE=\"/var/log/service.log\"\n\nmessage \"Service starting up...\"\nlog \"Configuration file: $CONFIG_FILE\"\nlog \"PID: $$\"\n\n# ... service logic ...\n\nmessage \"Service ready - listening on port 8080\"\n</code></pre>"},{"location":"bash/lib/writeToLogAndEcho.html#integration-patterns","title":"Integration Patterns","text":""},{"location":"bash/lib/writeToLogAndEcho.html#with-error-handling","title":"With Error Handling","text":"<pre><code>#!/bin/bash\nsource \"lib/writeToLogAndEcho.sh\"\n\nexport LOG_FILE=\"./operation.log\"\n\nperform_operation() {\n    message \"Starting critical operation\"\n\n    if risky_command; then\n        log \"Operation succeeded\"\n        message \"\u2713 Critical operation completed\"\n    else\n        log \"Operation failed with exit code $?\"\n        message \"\u2717 Critical operation failed\"\n        return 1\n    fi\n}\n</code></pre>"},{"location":"bash/lib/writeToLogAndEcho.html#with-timestamped-logs","title":"With Timestamped Logs","text":"<pre><code>#!/bin/bash\nsource \"lib/writeToLogAndEcho.sh\"\nsource \"lib/common.sh\"  # For get_timestamp()\n\nexport LOG_FILE=\"./timestamped.log\"\n\n# Enhanced logging with timestamps\ntimestamped_log() {\n    local timestamp=$(get_timestamp)\n    log \"[$timestamp] $1\"\n}\n\ntimestamped_message() {\n    local timestamp=$(get_timestamp)\n    message \"[$timestamp] $1\"\n}\n\n# Usage\ntimestamped_message \"Process started\"\ntimestamped_log \"Configuration loaded from config.json\"\n</code></pre>"},{"location":"bash/lib/writeToLogAndEcho.html#batch-processing","title":"Batch Processing","text":"<pre><code>#!/bin/bash\nsource \"lib/writeToLogAndEcho.sh\"\n\nexport LOG_FILE=\"./batch_$(date +%Y%m%d_%H%M%S).log\"\n\nmessage \"=== Batch Processing Started ===\"\n\nfor item in \"${items[@]}\"; do\n    message \"Processing: $item\"\n    log \"  - Validation: $(validate_item \"$item\")\"\n    log \"  - Processing: $(process_item \"$item\")\"\n    log \"  - Result: Success\"\ndone\n\nmessage \"=== Batch Processing Completed ===\"\n</code></pre>"},{"location":"bash/lib/writeToLogAndEcho.html#best-practices","title":"Best Practices","text":""},{"location":"bash/lib/writeToLogAndEcho.html#log-file-management","title":"Log File Management","text":"<ol> <li>Descriptive Names: Use meaningful log file names</li> <li>Date/Time Stamps: Include timestamps in log filenames for rotation</li> <li>Appropriate Locations: Use <code>/var/log/</code> for system services, local directories for user scripts</li> <li>Permissions: Ensure write access to log directories</li> </ol>"},{"location":"bash/lib/writeToLogAndEcho.html#message-guidelines","title":"Message Guidelines","text":"<ol> <li>Log vs Message: Use <code>log()</code> for detailed info, <code>message()</code> for user-relevant updates</li> <li>Clear Formatting: Use consistent formatting for different message types</li> <li>Context Information: Include relevant context (timestamps, variables, etc.)</li> <li>Error Details: Log error codes and conditions for troubleshooting</li> </ol>"},{"location":"bash/lib/writeToLogAndEcho.html#integration-tips","title":"Integration Tips","text":"<ol> <li>Early Setup: Set LOG_FILE early in scripts</li> <li>Combine with Common Functions: Use with timestamp and validation functions</li> <li>Error Handling: Always check log file accessibility</li> <li>Cleanup: Consider log rotation for long-running processes</li> </ol>"},{"location":"bash/lib/writeToLogAndEcho.html#error-handling","title":"Error Handling","text":""},{"location":"bash/lib/writeToLogAndEcho.html#missing-log_file","title":"Missing LOG_FILE","text":"<p>If <code>LOG_FILE</code> is not set, the script: - Displays a warning - Uses default log file (<code>${HOME}/script.log</code>) - Continues operation normally</p>"},{"location":"bash/lib/writeToLogAndEcho.html#invalid-log-directory","title":"Invalid Log Directory","text":"<p>If the log directory doesn't exist or isn't writable: - Reports clear error message - Exits with error code 1 - Prevents further execution</p>"},{"location":"bash/lib/writeToLogAndEcho.html#permission-issues","title":"Permission Issues","text":"<p>For permission-denied scenarios: - Clear error reporting - Guidance on fixing permissions - Graceful script termination</p>"},{"location":"bash/lib/writeToLogAndEcho.html#technical-details","title":"Technical Details","text":""},{"location":"bash/lib/writeToLogAndEcho.html#dependencies","title":"Dependencies","text":"<ul> <li>Common Functions: Uses <code>validate_directory()</code> from common.sh</li> <li>Bash Features: Uses standard bash I/O redirection</li> <li>File Operations: Safe file writing with error checking</li> </ul>"},{"location":"bash/lib/writeToLogAndEcho.html#based-on","title":"Based On","text":"<ul> <li>Reference: http://stackoverflow.com/a/18462920</li> <li>Enhanced with modern error handling and validation</li> <li>Integrated with shared library ecosystem</li> </ul>"},{"location":"bash/lib/writeToLogAndEcho.html#security-considerations","title":"Security Considerations","text":"<ul> <li>Path Validation: Log file paths validated before use</li> <li>Safe Operations: No arbitrary command execution</li> <li>Input Sanitization: Log messages handled safely</li> </ul>"},{"location":"bash/lib/writeToLogAndEcho.html#see-also","title":"See Also","text":"<ul> <li>Common Functions - Core validation and utility functions</li> <li>System Functions - System information for enhanced logging</li> <li>Development Tools - Scripts using logging utilities</li> </ul> <p>Script Location: <code>bash/lib/writeToLogAndEcho.sh</code> Based On: http://stackoverflow.com/a/18462920 Enhanced by: Alexander Kucera / babylondreams.de</p>"},{"location":"bash/media/convert_images_to_h264.html","title":"Images to H.264 Converter (convert_images_to_h264.sh)","text":"<p>Convert image sequences to H.264 video format with professional encoding settings and configurable quality parameters.</p>"},{"location":"bash/media/convert_images_to_h264.html#overview","title":"Overview","text":"<p>The <code>convert_images_to_h264.sh</code> script transforms image sequences into high-quality H.264 video files using FFmpeg. It provides professional-grade encoding options with optimized settings for different resolution and quality requirements, making it ideal for animation, time-lapse, and video production workflows.</p>"},{"location":"bash/media/convert_images_to_h264.html#usage","title":"Usage","text":"<pre><code>convert_images_to_h264.sh &lt;path_to_file&gt; [resolution] [framerate] [quality] [max_bitrate]\n</code></pre>"},{"location":"bash/media/convert_images_to_h264.html#arguments","title":"Arguments","text":"Argument Type Description Default <code>path_to_file</code> Required Path to input image sequence or video file - <code>resolution</code> Optional Output resolution (e.g., 1920x1080) 1920x1080 <code>framerate</code> Optional Frame rate in fps 25 <code>quality</code> Optional Quality setting (lower = better quality) 20 <code>max_bitrate</code> Optional Maximum bitrate in kbps 10000"},{"location":"bash/media/convert_images_to_h264.html#options","title":"Options","text":"Option Description <code>-h, --help</code> Show help message and exit"},{"location":"bash/media/convert_images_to_h264.html#examples","title":"Examples","text":""},{"location":"bash/media/convert_images_to_h264.html#basic-image-sequence-conversion","title":"Basic Image Sequence Conversion","text":"<pre><code># Convert numbered image sequence\n./convert_images_to_h264.sh sequence.%04d.jpg\n\n# Convert with default settings (1920x1080, 25fps, quality 20)\n./convert_images_to_h264.sh frame_%03d.png\n</code></pre>"},{"location":"bash/media/convert_images_to_h264.html#custom-quality-settings","title":"Custom Quality Settings","text":"<pre><code># High quality for professional use\n./convert_images_to_h264.sh images.%04d.tiff 1920x1080 25 18 15000\n\n# Web-optimized version\n./convert_images_to_h264.sh sequence.%04d.jpg 1280x720 30 22 8000\n\n# 4K high-quality encode\n./convert_images_to_h264.sh frames.%05d.exr 3840x2160 24 16 50000\n</code></pre>"},{"location":"bash/media/convert_images_to_h264.html#different-input-formats","title":"Different Input Formats","text":"<pre><code># From TIFF sequence (professional photography)\n./convert_images_to_h264.sh photos_%04d.tiff 1920x1080 24 18 12000\n\n# From PNG sequence (animation/graphics)\n./convert_images_to_h264.sh animation_%03d.png 1920x1080 30 20 10000\n\n# From EXR sequence (VFX/rendering)\n./convert_images_to_h264.sh render_%05d.exr 2048x1556 24 16 20000\n</code></pre>"},{"location":"bash/media/convert_images_to_h264.html#features","title":"Features","text":""},{"location":"bash/media/convert_images_to_h264.html#professional-encoding","title":"\ud83c\udfa5 Professional Encoding","text":"<ul> <li>H.264 Codec: Industry-standard compression with excellent quality/size ratio</li> <li>Configurable Quality: CRF-based quality control for consistent results</li> <li>Bitrate Control: Maximum bitrate limiting for streaming/delivery requirements</li> <li>Frame Rate Flexibility: Support for any frame rate from 1fps to 120fps</li> </ul>"},{"location":"bash/media/convert_images_to_h264.html#resolution-support","title":"\ud83d\udcd0 Resolution Support","text":"<ul> <li>Standard Formats: HD (1920x1080), 4K (3840x2160), 2K (2048x1556)</li> <li>Custom Resolutions: Any resolution supported by FFmpeg</li> <li>Aspect Ratio Preservation: Maintains proper aspect ratios</li> <li>Scaling Quality: High-quality scaling algorithms</li> </ul>"},{"location":"bash/media/convert_images_to_h264.html#advanced-options","title":"\ud83d\udee0\ufe0f Advanced Options","text":"<ul> <li>Input Validation: Comprehensive validation of input files and parameters</li> <li>Progress Monitoring: Real-time encoding progress feedback</li> <li>Error Handling: Robust error detection and reporting</li> <li>Shared Library Integration: Uses optimized codec setup functions</li> </ul>"},{"location":"bash/media/convert_images_to_h264.html#bitrate-guidelines","title":"Bitrate Guidelines","text":"Resolution Recommended Bitrate Range Use Case SD (480p) 2,000 - 5,000 kbps Web delivery, mobile 720p HD 5,000 - 10,000 kbps Standard HD, streaming 1080p HD 10,000 - 20,000 kbps Full HD, broadcast 2K 20,000 - 30,000 kbps Cinema, professional 4K 30,000 - 60,000 kbps Ultra HD, premium content"},{"location":"bash/media/convert_images_to_h264.html#quality-settings","title":"Quality Settings","text":"CRF Value Quality Level Use Case 16-18 Excellent Professional/broadcast 20-22 High Standard production 23-25 Good Web delivery 26-28 Acceptable High compression needs"},{"location":"bash/media/convert_images_to_h264.html#how-it-works","title":"How It Works","text":""},{"location":"bash/media/convert_images_to_h264.html#processing-pipeline","title":"Processing Pipeline","text":"<ol> <li>Input Validation: Verifies image sequence files exist and are accessible</li> <li>Parameter Setup: Configures encoding parameters based on input arguments</li> <li>Codec Configuration: Sets up H.264 encoder with optimized settings</li> <li>FFmpeg Execution: Runs FFmpeg with constructed command line</li> <li>Progress Monitoring: Provides real-time feedback during encoding</li> <li>Output Verification: Confirms successful completion and output file creation</li> </ol>"},{"location":"bash/media/convert_images_to_h264.html#encoding-configuration","title":"Encoding Configuration","text":"<p>The script uses optimized H.264 settings: - Profile: High profile for maximum compatibility - Preset: Balanced preset for quality vs. speed - Rate Control: CRF (Constant Rate Factor) for consistent quality - Bitrate Limiting: Maximum bitrate caps for delivery requirements</p>"},{"location":"bash/media/convert_images_to_h264.html#input-formats","title":"Input Formats","text":""},{"location":"bash/media/convert_images_to_h264.html#supported-image-formats","title":"Supported Image Formats","text":"<ul> <li>JPEG/JPG: Standard photography, compressed images</li> <li>PNG: Lossless graphics, transparency support</li> <li>TIFF: Professional photography, high bit depth</li> <li>EXR: VFX and rendering, HDR images</li> <li>DPX: Film/broadcast industry standard</li> <li>BMP: Windows bitmap format</li> </ul>"},{"location":"bash/media/convert_images_to_h264.html#sequence-naming-patterns","title":"Sequence Naming Patterns","text":"<pre><code># Common patterns (use %d for frame numbers)\nframe_%04d.jpg     # frame_0001.jpg, frame_0002.jpg...\nimage_%03d.png     # image_001.png, image_002.png...\nrender_%05d.exr    # render_00001.exr, render_00002.exr...\n</code></pre>"},{"location":"bash/media/convert_images_to_h264.html#configuration","title":"Configuration","text":""},{"location":"bash/media/convert_images_to_h264.html#environment-variables","title":"Environment Variables","text":"<p>No environment variables required. All configuration through command-line arguments.</p>"},{"location":"bash/media/convert_images_to_h264.html#ffmpeg-dependencies","title":"FFmpeg Dependencies","text":"<ul> <li>FFmpeg: Required with H.264 encoder support</li> <li>x264: H.264 encoding library (usually included with FFmpeg)</li> </ul>"},{"location":"bash/media/convert_images_to_h264.html#integration","title":"Integration","text":""},{"location":"bash/media/convert_images_to_h264.html#animation-workflows","title":"Animation Workflows","text":"<pre><code>#!/bin/bash\n# Animation rendering pipeline\nSEQUENCE_DIR=\"~/renders/animation\"\nOUTPUT_DIR=\"~/output/videos\"\n\n# Multiple quality versions\n./convert_images_to_h264.sh \"$SEQUENCE_DIR/frame_%04d.png\" 1920x1080 24 18 15000\nmv output.mp4 \"$OUTPUT_DIR/animation_high.mp4\"\n\n./convert_images_to_h264.sh \"$SEQUENCE_DIR/frame_%04d.png\" 1280x720 24 22 8000\nmv output.mp4 \"$OUTPUT_DIR/animation_web.mp4\"\n</code></pre>"},{"location":"bash/media/convert_images_to_h264.html#batch-processing","title":"Batch Processing","text":"<pre><code>#!/bin/bash\n# Process multiple sequences\nfor sequence in ~/sequences/*.%04d.jpg; do\n    base_name=$(basename \"$sequence\" .%04d.jpg)\n    ./convert_images_to_h264.sh \"$sequence\" 1920x1080 25 20 12000\n    mv output.mp4 \"~/videos/${base_name}_h264.mp4\"\ndone\n</code></pre>"},{"location":"bash/media/convert_images_to_h264.html#time-lapse-creation","title":"Time-lapse Creation","text":"<pre><code># Time-lapse from photos\n./convert_images_to_h264.sh timelapse_%04d.jpg 1920x1080 30 20 15000\n\n# Hyperlapse with motion blur\n./convert_images_to_h264.sh hyperlapse_%05d.tiff 3840x2160 60 18 40000\n</code></pre>"},{"location":"bash/media/convert_images_to_h264.html#best-practices","title":"Best Practices","text":""},{"location":"bash/media/convert_images_to_h264.html#pre-processing","title":"Pre-Processing","text":"<ol> <li>Consistent Naming: Use consistent frame numbering (e.g., %04d)</li> <li>Frame Rate Planning: Choose appropriate frame rate for content type</li> <li>Resolution Decisions: Match output resolution to intended use</li> <li>Quality Testing: Test quality settings on a short sequence first</li> </ol>"},{"location":"bash/media/convert_images_to_h264.html#encoding-optimization","title":"Encoding Optimization","text":"<ol> <li>Quality vs. Size: Balance CRF and bitrate for optimal results</li> <li>Target Platform: Consider playback device capabilities</li> <li>Delivery Method: Optimize for streaming vs. download</li> <li>Storage Constraints: Adjust settings based on storage limitations</li> </ol>"},{"location":"bash/media/convert_images_to_h264.html#quality-control","title":"Quality Control","text":"<ol> <li>Preview Encoding: Test settings on a small sample first</li> <li>Visual Inspection: Always review encoded output</li> <li>Bitrate Analysis: Monitor actual vs. maximum bitrate usage</li> <li>Compatibility Testing: Verify playback on target devices</li> </ol>"},{"location":"bash/media/convert_images_to_h264.html#troubleshooting","title":"Troubleshooting","text":""},{"location":"bash/media/convert_images_to_h264.html#common-issues","title":"Common Issues","text":"<p>FFmpeg Not Found - Install FFmpeg with H.264 support - Ensure FFmpeg is in system PATH - Verify x264 encoder availability</p> <p>Input File Errors - Check image sequence naming pattern matches - Verify all sequence files exist and are readable - Ensure image format is supported by FFmpeg</p> <p>Quality Issues - Lower CRF value for better quality (but larger files) - Increase maximum bitrate for complex content - Consider different preset for speed vs. quality trade-off</p> <p>Performance Problems - Use hardware acceleration if available - Adjust FFmpeg preset for faster encoding - Process smaller batches for memory management</p>"},{"location":"bash/media/convert_images_to_h264.html#technical-details","title":"Technical Details","text":""},{"location":"bash/media/convert_images_to_h264.html#dependencies","title":"Dependencies","text":"<ul> <li>FFmpeg: With H.264/x264 encoder support</li> <li>Shared Libraries: Uses media_functions.sh for codec setup</li> <li>Common Functions: Input validation and error handling</li> </ul>"},{"location":"bash/media/convert_images_to_h264.html#encoding-command-structure","title":"Encoding Command Structure","text":"<pre><code>ffmpeg -r $FRAMERATE -i \"$INPUT_PATTERN\" \\\n       -c:v libx264 -crf $QUALITY \\\n       -maxrate ${MAX_BITRATE}k -bufsize $((MAX_BITRATE * 2))k \\\n       -s $RESOLUTION -pix_fmt yuv420p \\\n       \"$OUTPUT_FILE\"\n</code></pre>"},{"location":"bash/media/convert_images_to_h264.html#security-considerations","title":"Security Considerations","text":"<ul> <li>Input Validation: All parameters validated before use</li> <li>Path Safety: No arbitrary command construction</li> <li>File Validation: Input files verified before processing</li> </ul>"},{"location":"bash/media/convert_images_to_h264.html#see-also","title":"See Also","text":"<ul> <li>Images to ProRes Converter - Professional codec alternative</li> <li>Movie to H.264 Converter - Video file input version</li> <li>Media Functions - Shared encoding functions</li> <li>Media Processing Overview - All media tools</li> </ul> <p>Script Location: <code>bash/media/convert_images_to_h264.sh</code> Author: Alexander Kucera / babylondreams.de Copyright: 2012 BabylonDreams. All rights reserved.</p>"},{"location":"bash/media/convert_images_to_prores.html","title":"Images to ProRes Converter (convert_images_to_prores.sh)","text":"<p>Convert image sequences to Apple ProRes format with professional-grade quality settings for broadcast and post-production workflows.</p>"},{"location":"bash/media/convert_images_to_prores.html#overview","title":"Overview","text":"<p>The <code>convert_images_to_prores.sh</code> script transforms image sequences into Apple ProRes video files, the industry standard for professional video production. It supports all ProRes variants from Proxy to 4444, providing optimal quality for editing, color grading, and broadcast delivery.</p>"},{"location":"bash/media/convert_images_to_prores.html#usage","title":"Usage","text":"<pre><code>convert_images_to_prores.sh &lt;path_to_file&gt; [resolution] [framerate] [quality] [format]\n</code></pre>"},{"location":"bash/media/convert_images_to_prores.html#arguments","title":"Arguments","text":"Argument Type Description Default <code>path_to_file</code> Required Path to input image sequence - <code>resolution</code> Optional Output resolution 1920x1080 <code>framerate</code> Optional Frame rate in fps 25 <code>quality</code> Optional Quality setting 20 <code>format</code> Optional ProRes format (0-4) 4 (4444)"},{"location":"bash/media/convert_images_to_prores.html#prores-formats","title":"ProRes Formats","text":"Value Format Description Use Case 0 Proxy Low resolution/bitrate Offline editing 1 LT Light compression Standard editing 2 Standard Balanced quality/size General production 3 HQ High quality Professional delivery 4 4444 Highest quality + alpha VFX, color grading"},{"location":"bash/media/convert_images_to_prores.html#examples","title":"Examples","text":""},{"location":"bash/media/convert_images_to_prores.html#professional-workflows","title":"Professional Workflows","text":"<pre><code># VFX sequence to ProRes 4444\n./convert_images_to_prores.sh vfx_%05d.exr 2048x1556 24 18 4\n\n# Animation to ProRes HQ\n./convert_images_to_prores.sh anim_%04d.png 1920x1080 24 20 3\n\n# Proxy for offline editing\n./convert_images_to_prores.sh dailies_%04d.jpg 1920x1080 25 22 0\n</code></pre>"},{"location":"bash/media/convert_images_to_prores.html#broadcast-production","title":"Broadcast Production","text":"<pre><code># Broadcast standard (ProRes HQ)\n./convert_images_to_prores.sh sequence_%04d.tiff 1920x1080 25 18 3\n\n# 4K production (ProRes 4444)\n./convert_images_to_prores.sh frames_%05d.dpx 3840x2160 24 16 4\n</code></pre>"},{"location":"bash/media/convert_images_to_prores.html#see-also","title":"See Also","text":"<ul> <li>Images to H.264 Converter - Web delivery alternative</li> <li>Media Functions - ProRes encoding setup</li> <li>Media Processing Overview - All media tools</li> </ul> <p>Script Location: <code>bash/media/convert_images_to_prores.sh</code> Author: Alexander Kucera / babylondreams.de</p>"},{"location":"bash/media/convert_movie_to_h264.html","title":"Movie to H.264 Converter (convert_movie_to_h264.sh)","text":"<p>Convert video files to H.264 format with optimized settings for web delivery, streaming, and distribution.</p>"},{"location":"bash/media/convert_movie_to_h264.html#overview","title":"Overview","text":"<p>Convert existing video files to H.264 format using professional encoding settings. Ideal for creating web-optimized versions, streaming content, and cross-platform compatible video files.</p>"},{"location":"bash/media/convert_movie_to_h264.html#usage","title":"Usage","text":"<pre><code>convert_movie_to_h264.sh &lt;path_to_file&gt; [resolution] [quality] [max_bitrate]\n</code></pre>"},{"location":"bash/media/convert_movie_to_h264.html#arguments","title":"Arguments","text":"Argument Type Description Default <code>path_to_file</code> Required Path to input video file - <code>resolution</code> Optional Output resolution 1920x1080 <code>quality</code> Optional Quality setting (CRF) 20 <code>max_bitrate</code> Optional Maximum bitrate in kbps 10000"},{"location":"bash/media/convert_movie_to_h264.html#examples","title":"Examples","text":""},{"location":"bash/media/convert_movie_to_h264.html#basic-conversion","title":"Basic Conversion","text":"<pre><code># Convert with default settings\n./convert_movie_to_h264.sh input.mov\n\n# Web-optimized version\n./convert_movie_to_h264.sh source.avi 1280x720 22 8000\n\n# High quality for distribution\n./convert_movie_to_h264.sh master.mov 1920x1080 18 15000\n</code></pre>"},{"location":"bash/media/convert_movie_to_h264.html#batch-processing","title":"Batch Processing","text":"<pre><code># Convert all MOV files in directory\nfor file in *.mov; do\n    ./convert_movie_to_h264.sh \"$file\" 1920x1080 20 12000\ndone\n</code></pre>"},{"location":"bash/media/convert_movie_to_h264.html#bitrate-guidelines","title":"Bitrate Guidelines","text":"<p>Same as Images to H.264 - optimized for different resolutions and use cases.</p>"},{"location":"bash/media/convert_movie_to_h264.html#see-also","title":"See Also","text":"<ul> <li>Images to H.264 Converter - Image sequence version</li> <li>Movie to ProRes Converter - Professional alternative</li> <li>Movie to Web Converter - Multi-format web output</li> </ul> <p>Script Location: <code>bash/media/convert_movie_to_h264.sh</code> Author: Alexander Kucera / babylondreams.de</p>"},{"location":"bash/media/convert_movie_to_prores.html","title":"Movie to ProRes Converter (convert_movie_to_prores.sh)","text":"<p>Convert video files to Apple ProRes format for professional post-production and broadcast workflows.</p>"},{"location":"bash/media/convert_movie_to_prores.html#usage","title":"Usage","text":"<pre><code>convert_movie_to_prores.sh &lt;path_to_file&gt; [resolution] [framerate] [quality] [format]\n</code></pre>"},{"location":"bash/media/convert_movie_to_prores.html#prores-formats","title":"ProRes Formats","text":"<ul> <li>0: Proxy - Offline editing</li> <li>1: LT - Standard editing  </li> <li>2: Standard - General production</li> <li>3: HQ - Professional delivery</li> <li>4: 4444 - VFX, color grading (default)</li> </ul>"},{"location":"bash/media/convert_movie_to_prores.html#examples","title":"Examples","text":"<pre><code># Convert to ProRes 4444 for color grading\n./convert_movie_to_prores.sh source.mov 1920x1080 25 18 4\n\n# Create proxy for offline editing\n./convert_movie_to_prores.sh master.avi 1920x1080 25 22 0\n\n# Professional delivery format\n./convert_movie_to_prores.sh final.mp4 1920x1080 24 18 3\n</code></pre>"},{"location":"bash/media/convert_movie_to_prores.html#see-also","title":"See Also","text":"<ul> <li>Images to ProRes Converter - Image sequence version</li> <li>Movie to H.264 Converter - Web delivery alternative</li> </ul> <p>Script Location: <code>bash/media/convert_movie_to_prores.sh</code> Author: Alexander Kucera / babylondreams.de</p>"},{"location":"bash/media/movie_to_web.html","title":"Movie to Web Converter (movie_to_web.sh)","text":"<p>Convert video files to web-optimized formats (MP4 and WebM) for maximum browser compatibility and streaming performance.</p>"},{"location":"bash/media/movie_to_web.html#overview","title":"Overview","text":"<p>Creates web-optimized video files in both MP4 (H.264) and WebM formats, ensuring maximum compatibility across all browsers and devices. Optimized for web delivery with balanced quality and file size.</p>"},{"location":"bash/media/movie_to_web.html#usage","title":"Usage","text":"<pre><code>movie_to_web.sh &lt;path_to_file&gt;\n</code></pre>"},{"location":"bash/media/movie_to_web.html#arguments","title":"Arguments","text":"Argument Type Description <code>path_to_file</code> Required Path to input video file"},{"location":"bash/media/movie_to_web.html#features","title":"Features","text":"<ul> <li>Dual Format Output: Creates both MP4 and WebM versions</li> <li>Web Optimization: Settings optimized for web streaming</li> <li>Browser Compatibility: Ensures playback across all major browsers</li> <li>Automatic Quality: Pre-configured quality settings for web delivery</li> </ul>"},{"location":"bash/media/movie_to_web.html#examples","title":"Examples","text":"<pre><code># Convert for web deployment\n./movie_to_web.sh promotional_video.mov\n\n# Process training videos\n./movie_to_web.sh training_session.avi\n\n# Convert product demos\n./movie_to_web.sh product_demo.mp4\n</code></pre>"},{"location":"bash/media/movie_to_web.html#output-files","title":"Output Files","text":"<ul> <li><code>filename_web.mp4</code> - H.264 version for broad compatibility</li> <li><code>filename_web.webm</code> - WebM version for modern browsers</li> </ul>"},{"location":"bash/media/movie_to_web.html#see-also","title":"See Also","text":"<ul> <li>Movie to H.264 Converter - H.264-only output</li> <li>Media Processing Overview - All media tools</li> </ul> <p>Script Location: <code>bash/media/movie_to_web.sh</code> Author: Alexander Kucera / babylondreams.de</p>"},{"location":"bash/media/split_stereo_to_mono.html","title":"Stereo to Mono Audio Split (split_stereo_to_mono.sh)","text":"<p>Split stereo audio files into separate mono channel files with lossless quality preservation.</p>"},{"location":"bash/media/split_stereo_to_mono.html#overview","title":"Overview","text":"<p>Separates stereo audio files into individual left and right channel mono files using Apple Lossless format. Essential for audio post-production, music production, and broadcast workflows where channel separation is required.</p>"},{"location":"bash/media/split_stereo_to_mono.html#usage","title":"Usage","text":"<pre><code>split_stereo_to_mono.sh &lt;path_to_file&gt;\n</code></pre>"},{"location":"bash/media/split_stereo_to_mono.html#arguments","title":"Arguments","text":"Argument Type Description <code>path_to_file</code> Required Path to input stereo audio file"},{"location":"bash/media/split_stereo_to_mono.html#features","title":"Features","text":"<ul> <li>Lossless Quality: Uses Apple Lossless format for quality preservation</li> <li>Channel Separation: Creates separate left and right channel files</li> <li>Format Support: Handles WAV, AIFF, MP3, and other common audio formats</li> <li>Professional Output: Apple Lossless suitable for further processing</li> </ul>"},{"location":"bash/media/split_stereo_to_mono.html#examples","title":"Examples","text":"<pre><code># Split music recording\n./split_stereo_to_mono.sh song_stereo.wav\n\n# Process podcast audio\n./split_stereo_to_mono.sh interview.aiff\n\n# Separate dialogue tracks\n./split_stereo_to_mono.sh dialogue_stereo.mp3\n</code></pre>"},{"location":"bash/media/split_stereo_to_mono.html#output-files","title":"Output Files","text":"<ul> <li><code>filename_left.m4a</code> - Left channel in Apple Lossless</li> <li><code>filename_right.m4a</code> - Right channel in Apple Lossless</li> </ul>"},{"location":"bash/media/split_stereo_to_mono.html#use-cases","title":"Use Cases","text":"<ul> <li>Music Production: Separate instruments recorded on different channels</li> <li>Podcast Production: Split host and guest recordings</li> <li>Audio Restoration: Process channels independently</li> <li>Broadcast: Create separate mono feeds for different outputs</li> </ul>"},{"location":"bash/media/split_stereo_to_mono.html#see-also","title":"See Also","text":"<ul> <li>Media Functions - Audio processing utilities</li> <li>Media Processing Overview - All media tools</li> </ul> <p>Script Location: <code>bash/media/split_stereo_to_mono.sh</code> Author: Alexander Kucera / babylondreams.de</p>"},{"location":"bash/rendering/mail_send.html","title":"Mail Notifications (mail_send.sh)","text":"<p>Send email notifications for completed renders with timing information and system details.</p>"},{"location":"bash/rendering/mail_send.html#overview","title":"Overview","text":"<p>Automated email notification system for render completion with detailed timing statistics, machine identification, and professional formatting. Essential for long-running render processes and distributed rendering workflows.</p>"},{"location":"bash/rendering/mail_send.html#usage","title":"Usage","text":"<pre><code>mail_send.sh\n</code></pre>"},{"location":"bash/rendering/mail_send.html#features","title":"Features","text":"<ul> <li>Render Timing: Tracks start time, end time, and total duration</li> <li>Machine Identification: Includes hostname in notifications</li> <li>Professional Formatting: Clean, informative email content</li> <li>Error Handling: Validates email configuration and connectivity</li> </ul>"},{"location":"bash/rendering/mail_send.html#configuration","title":"Configuration","text":""},{"location":"bash/rendering/mail_send.html#email-settings","title":"Email Settings","text":"<p>Edit <code>config/mail_send.conf</code>: <pre><code>FROM_ADDRESS=\"renders@yourcompany.com\"\nTO_ADDRESS=\"team@yourcompany.com\"\nSERVER=\"smtp.yourserver.com\"\nUSER=\"smtp_username\"\n# PASS set via environment variable\n</code></pre></p>"},{"location":"bash/rendering/mail_send.html#environment-variables","title":"Environment Variables","text":"<pre><code>export MAIL_PASSWORD=\"your_smtp_password\"\n</code></pre>"},{"location":"bash/rendering/mail_send.html#examples","title":"Examples","text":"<pre><code># Basic render notification\n./mail_send.sh\n\n# Integration with render scripts\n./render_job.sh &amp;&amp; ./mail_send.sh\n\n# Conditional notifications\nif render_command; then\n    ./mail_send.sh\nelse\n    echo \"Render failed - notification not sent\"\nfi\n</code></pre>"},{"location":"bash/rendering/mail_send.html#email-content","title":"Email Content","text":"<p>The notification includes: - Machine Name: Which system completed the render - Start Time: When the render began - End Time: When the render completed - Duration: Total render time in hours:minutes:seconds format - Professional Formatting: Clean, readable layout</p>"},{"location":"bash/rendering/mail_send.html#requirements","title":"Requirements","text":"<ul> <li>sendemail: Command-line email utility</li> <li>SMTP Access: Configured email server</li> <li>Network Connectivity: For email delivery</li> </ul>"},{"location":"bash/rendering/mail_send.html#security","title":"Security","text":"<ul> <li>No Hardcoded Passwords: Uses environment variables</li> <li>Validated Configuration: Checks all required settings</li> <li>Error Reporting: Clear messages for configuration issues</li> </ul>"},{"location":"bash/rendering/mail_send.html#see-also","title":"See Also","text":"<ul> <li>Nuke Render Automation - Integrated render notifications</li> <li>Mail Configuration - Email setup details</li> </ul> <p>Script Location: <code>bash/rendering/mail_send.sh</code> Author: Alexander Kucera / babylondreams.de</p>"},{"location":"bash/rendering/nukerender_bash.html","title":"Nuke Render Automation (nukerender_bash.sh)","text":"<p>Automated Nuke rendering with interactive configuration, email notifications, and comprehensive error handling.</p>"},{"location":"bash/rendering/nukerender_bash.html#overview","title":"Overview","text":"<p>Professional Nuke rendering automation that provides interactive setup for render options, automatic email notifications, and detailed progress tracking. Designed for production environments where reliable render execution and notification are critical.</p>"},{"location":"bash/rendering/nukerender_bash.html#usage","title":"Usage","text":"<pre><code>nukerender_bash.sh &lt;nuke_script&gt; [output_path]\n</code></pre>"},{"location":"bash/rendering/nukerender_bash.html#arguments","title":"Arguments","text":"Argument Type Description <code>nuke_script</code> Required Path to Nuke script file (.nk) <code>output_path</code> Optional Output path for rendered files"},{"location":"bash/rendering/nukerender_bash.html#interactive-configuration","title":"Interactive Configuration","text":"<p>The script prompts for render settings:</p> <ol> <li>Render Range: Custom frame range (e.g., <code>-F 12-13</code>) or comp default</li> <li>GPU Usage: Enable/disable GPU acceleration</li> <li>Interactive License: Required for Furnace tools and certain plugins</li> </ol>"},{"location":"bash/rendering/nukerender_bash.html#features","title":"Features","text":""},{"location":"bash/rendering/nukerender_bash.html#render-management","title":"\ud83c\udfac Render Management","text":"<ul> <li>Frame Range Control: Custom ranges or script defaults</li> <li>GPU Acceleration: Optional GPU rendering support</li> <li>Interactive Licensing: Support for Furnace and commercial plugins</li> <li>Multi-core Utilization: Automatic CPU core detection and usage</li> </ul>"},{"location":"bash/rendering/nukerender_bash.html#notification-system","title":"\ud83d\udce7 Notification System","text":"<ul> <li>Email Integration: Automatic completion notifications</li> <li>Timing Tracking: Detailed start/end times and duration</li> <li>Machine Identification: Hostname included in notifications</li> <li>Error Reporting: Failed renders reported via email</li> </ul>"},{"location":"bash/rendering/nukerender_bash.html#safety-features","title":"\ud83d\udee1\ufe0f Safety Features","text":"<ul> <li>Input Validation: Comprehensive script and path validation</li> <li>Environment Checks: Validates Nuke installation and paths</li> <li>Error Handling: Graceful handling of render failures</li> <li>Configuration Validation: Checks email and system setup</li> </ul>"},{"location":"bash/rendering/nukerender_bash.html#environment-setup","title":"Environment Setup","text":""},{"location":"bash/rendering/nukerender_bash.html#required-environment-variables","title":"Required Environment Variables","text":"<pre><code>export NUKEPATH=\"/Applications/Nuke/Nuke15.0v4/Nuke15.0v4\"\nexport MAIL_PASSWORD=\"your_smtp_password\"\n</code></pre>"},{"location":"bash/rendering/nukerender_bash.html#configuration-files","title":"Configuration Files","text":"<ul> <li><code>config/mail_send.conf</code>: Email notification settings</li> </ul>"},{"location":"bash/rendering/nukerender_bash.html#examples","title":"Examples","text":""},{"location":"bash/rendering/nukerender_bash.html#basic-rendering","title":"Basic Rendering","text":"<pre><code># Render with interactive setup\n./nukerender_bash.sh shot_001.nk\n\n# Render to specific output location\n./nukerender_bash.sh shot_001.nk /renders/shot_001/\n</code></pre>"},{"location":"bash/rendering/nukerender_bash.html#production-workflows","title":"Production Workflows","text":"<pre><code>#!/bin/bash\n# Batch render script\nfor script in shots/*.nk; do\n    echo \"Rendering: $script\"\n    ./nukerender_bash.sh \"$script\"\n\n    if [[ $? -eq 0 ]]; then\n        echo \"\u2713 $script completed successfully\"\n    else\n        echo \"\u2717 $script failed\"\n        # Continue with next script\n    fi\ndone\n</code></pre>"},{"location":"bash/rendering/nukerender_bash.html#render-command-examples","title":"Render Command Examples","text":"<p>The script provides helpful command-line examples:</p> <pre><code># Render specific frame\nnuke -F 5 -x myscript.nk\n\n# Render frame range\nnuke -F 30-50 -x myscript.nk\n\n# Multiple ranges\nnuke -F 10-20 -F 34-60 -x myscript.nk\n\n# Every tenth frame\nnuke -F 1-50x10 -x myscript.nk\n\n# Specific write node\nnuke -X WriteBlur myscript.nk 1-20\n</code></pre>"},{"location":"bash/rendering/nukerender_bash.html#notification-content","title":"Notification Content","text":"<p>Email notifications include: - Machine Hostname: Which system completed the render - Script Name: Nuke script that was rendered - Start/End Times: Complete timing information - Total Duration: Formatted as hours:minutes:seconds - Render Settings: GPU usage, frame range, license type</p>"},{"location":"bash/rendering/nukerender_bash.html#error-handling","title":"Error Handling","text":""},{"location":"bash/rendering/nukerender_bash.html#common-issues","title":"Common Issues","text":"<ul> <li>Missing Nuke Path: Validates NUKEPATH environment variable</li> <li>Script Validation: Checks Nuke script exists and is readable</li> <li>Email Configuration: Validates mail settings before render</li> <li>Render Failures: Captures and reports Nuke errors</li> </ul>"},{"location":"bash/rendering/nukerender_bash.html#troubleshooting","title":"Troubleshooting","text":"<ul> <li>Permission Issues: Ensure script has execute permissions</li> <li>Network Problems: Check email server connectivity</li> <li>Nuke Licensing: Verify appropriate Nuke licenses available</li> <li>Path Issues: Use absolute paths for reliability</li> </ul>"},{"location":"bash/rendering/nukerender_bash.html#integration","title":"Integration","text":""},{"location":"bash/rendering/nukerender_bash.html#farm-rendering","title":"Farm Rendering","text":"<pre><code># Render farm integration\nexport NUKEPATH=\"/path/to/nuke\"\nexport MAIL_PASSWORD=\"$RENDER_FARM_MAIL_PASS\"\n\n./nukerender_bash.sh \"$SHOT_SCRIPT\" \"$RENDER_OUTPUT\"\n</code></pre>"},{"location":"bash/rendering/nukerender_bash.html#cicd-pipelines","title":"CI/CD Pipelines","text":"<pre><code># Automated rendering in pipelines\nif ./nukerender_bash.sh daily_comp.nk /output/; then\n    echo \"Daily render completed\"\n    deploy_to_review_system\nelse\n    echo \"Daily render failed\"\n    alert_team\nfi\n</code></pre>"},{"location":"bash/rendering/nukerender_bash.html#requirements","title":"Requirements","text":""},{"location":"bash/rendering/nukerender_bash.html#software-dependencies","title":"Software Dependencies","text":"<ul> <li>Nuke: Foundry Nuke with command-line support</li> <li>sendemail: For email notifications</li> <li>Network Access: For email delivery</li> </ul>"},{"location":"bash/rendering/nukerender_bash.html#system-requirements","title":"System Requirements","text":"<ul> <li>macOS/Linux: Unix-like operating system</li> <li>Sufficient RAM: Based on Nuke script complexity</li> <li>Disk Space: For rendered output files</li> </ul>"},{"location":"bash/rendering/nukerender_bash.html#see-also","title":"See Also","text":"<ul> <li>Mail Notifications - Email notification setup</li> <li>System Functions - System information utilities</li> <li>Mail Configuration - Email setup details</li> </ul> <p>Script Location: <code>bash/rendering/nukerender_bash.sh</code> Author: Alexander Kucera / babylondreams.de</p>"},{"location":"bash/system/application_list_updater.html","title":"Application List Updater (application_list_updater.sh)","text":"<p>Generate comprehensive lists of installed applications for backup and restoration purposes.</p>"},{"location":"bash/system/application_list_updater.html#overview","title":"Overview","text":"<p>Creates detailed inventories of all installed applications on macOS systems, including system applications, user applications, Homebrew packages, and App Store applications. Essential for system migration, backup planning, and software auditing.</p>"},{"location":"bash/system/application_list_updater.html#usage","title":"Usage","text":"<pre><code>application_list_updater.sh [output_file]\n</code></pre>"},{"location":"bash/system/application_list_updater.html#arguments","title":"Arguments","text":"Argument Type Description Default <code>output_file</code> Optional Path for output file ~/Documents/ApplicationList.txt"},{"location":"bash/system/application_list_updater.html#features","title":"Features","text":"<ul> <li>Complete Coverage: Lists applications from multiple sources</li> <li>Organized Output: Categorizes applications by installation method</li> <li>Homebrew Integration: Includes both packages and casks</li> <li>App Store Detection: Identifies Mac App Store applications</li> <li>Timestamp Tracking: Includes generation date for reference</li> </ul>"},{"location":"bash/system/application_list_updater.html#application-sources","title":"Application Sources","text":"Category Location Description System Apps /Applications Standard macOS applications User Apps ~/Applications User-specific applications Homebrew Packages brew list Command-line tools and libraries Homebrew Casks brew list --cask GUI applications installed via Homebrew App Store mas list Mac App Store applications"},{"location":"bash/system/application_list_updater.html#examples","title":"Examples","text":"<pre><code># Generate default application list\n./application_list_updater.sh\n\n# Custom output location\n./application_list_updater.sh ~/Backups/apps_$(date +%Y%m%d).txt\n\n# Store in project directory\n./application_list_updater.sh ./system_apps.txt\n</code></pre>"},{"location":"bash/system/application_list_updater.html#output-format","title":"Output Format","text":"<pre><code>Application List - Generated Mon Jul  5 13:30:00 CEST 2025\n==================================================\n\nThis file lists all installed applications for restoration purposes.\nNote: Actual applications are not backed up, only their names.\n\n=== SYSTEM APPLICATIONS ===\nActivity Monitor\nApp Store\nCalculator\nCalendar\n...\n\n=== HOMEBREW PACKAGES ===\nffmpeg\ngit\nnode\n...\n\n=== HOMEBREW CASKS ===\nvisual-studio-code\nchrome\nfirefox\n...\n\n=== MAC APP STORE APPLICATIONS ===\nXcode (497799835)\nPages (409201541)\n...\n</code></pre>"},{"location":"bash/system/application_list_updater.html#integration","title":"Integration","text":""},{"location":"bash/system/application_list_updater.html#backup-workflows","title":"Backup Workflows","text":"<pre><code>#!/bin/bash\n# System backup script\nBACKUP_DATE=$(date +%Y%m%d)\nBACKUP_DIR=\"~/Backups/$BACKUP_DATE\"\n\nmkdir -p \"$BACKUP_DIR\"\n./application_list_updater.sh \"$BACKUP_DIR/applications.txt\"\n</code></pre>"},{"location":"bash/system/application_list_updater.html#system-migration","title":"System Migration","text":"<pre><code># Pre-migration inventory\n./application_list_updater.sh ~/Desktop/old_system_apps.txt\n\n# Post-migration comparison\n./application_list_updater.sh ~/Desktop/new_system_apps.txt\ndiff ~/Desktop/old_system_apps.txt ~/Desktop/new_system_apps.txt\n</code></pre>"},{"location":"bash/system/application_list_updater.html#see-also","title":"See Also","text":"<ul> <li>System Functions - System information utilities</li> <li>System Administration Overview - Related tools</li> </ul> <p>Script Location: <code>bash/system/application_list_updater.sh</code> Author: Alexander Kucera / babylondreams.de</p>"},{"location":"bash/system/checkLogSize.html","title":"Log Size Checker (checkLogSize.sh)","text":"<p>Monitor log file sizes and validate they stay within specified limits for automated monitoring and maintenance.</p>"},{"location":"bash/system/checkLogSize.html#usage","title":"Usage","text":"<pre><code>checkLogSize.sh [log_file] [max_size_kb]\n</code></pre>"},{"location":"bash/system/checkLogSize.html#arguments","title":"Arguments","text":"Argument Type Description Default <code>log_file</code> Optional Path to log file ~/Documents/scripts/mount_unmount_bootable.log <code>max_size_kb</code> Optional Maximum size in KB 128"},{"location":"bash/system/checkLogSize.html#exit-codes","title":"Exit Codes","text":"<ul> <li>0: File size within limits</li> <li>1: File size exceeds limit or error occurred</li> </ul>"},{"location":"bash/system/checkLogSize.html#examples","title":"Examples","text":"<pre><code># Check default log file\n./checkLogSize.sh\n\n# Check custom log with 256KB limit\n./checkLogSize.sh /var/log/my.log 256\n\n# Check with 1MB limit\n./checkLogSize.sh ~/logs/debug.log 1024\n</code></pre>"},{"location":"bash/system/checkLogSize.html#automation","title":"Automation","text":"<pre><code># Cron job for daily monitoring\n0 9 * * * /path/to/checkLogSize.sh /var/log/app.log 500 || echo \"Log file too large\"\n\n# Script integration\nif ./checkLogSize.sh ~/app.log 1000; then\n    echo \"Log size OK\"\nelse\n    echo \"Log rotation needed\"\n    logrotate ~/app.log\nfi\n</code></pre>"},{"location":"bash/system/checkLogSize.html#see-also","title":"See Also","text":"<ul> <li>Log Collector - Advanced log processing</li> <li>System Functions - Log management utilities</li> </ul> <p>Script Location: <code>bash/system/checkLogSize.sh</code> Author: Alexander Kucera / babylondreams.de</p>"},{"location":"bash/system/getDiskDevice.html","title":"Disk Device Finder (getDiskDevice.sh)","text":"<p>Find disk device identifiers by searching for volume labels on macOS systems.</p>"},{"location":"bash/system/getDiskDevice.html#usage","title":"Usage","text":"<pre><code>getDiskDevice.sh [label]\n</code></pre>"},{"location":"bash/system/getDiskDevice.html#arguments","title":"Arguments","text":"Argument Type Description Default <code>label</code> Optional Disk label to search for BackupSystem"},{"location":"bash/system/getDiskDevice.html#features","title":"Features","text":"<ul> <li>Label-Based Lookup: Find disks by human-readable names</li> <li>Device Identification: Returns BSD device identifiers (e.g., /dev/disk2s1)</li> <li>macOS Integration: Uses diskutil for accurate disk information</li> <li>Mount Status: Works with both mounted and unmounted volumes</li> </ul>"},{"location":"bash/system/getDiskDevice.html#examples","title":"Examples","text":"<pre><code># Search for default \"BackupSystem\" disk\n./getDiskDevice.sh\n\n# Find Time Machine disk\n./getDiskDevice.sh \"Time Machine\"\n\n# Find external drive\n./getDiskDevice.sh \"My External Drive\"\n\n# Use in scripts\nDEVICE=$(./getDiskDevice.sh \"Backup Drive\")\nif [[ -n \"$DEVICE\" ]]; then\n    echo \"Found backup disk at $DEVICE\"\nfi\n</code></pre>"},{"location":"bash/system/getDiskDevice.html#exit-codes","title":"Exit Codes","text":"<ul> <li>0: Disk found successfully</li> <li>1: Disk not found or error occurred</li> </ul>"},{"location":"bash/system/getDiskDevice.html#use-cases","title":"Use Cases","text":"<ul> <li>Backup Scripts: Locate backup drives automatically</li> <li>Maintenance Tasks: Find specific volumes for operations</li> <li>System Administration: Automate disk-based workflows</li> </ul>"},{"location":"bash/system/getDiskDevice.html#see-also","title":"See Also","text":"<ul> <li>System Functions - Disk management utilities</li> <li>System Administration Overview - Related tools</li> </ul> <p>Script Location: <code>bash/system/getDiskDevice.sh</code> Author: Alexander Kucera / babylondreams.de</p>"},{"location":"bash/system/log_collector.html","title":"Log Collector (log_collector.sh)","text":"<p>Advanced log collection and filtering system with category-based organization and time-based queries.</p>"},{"location":"bash/system/log_collector.html#overview","title":"Overview","text":"<p>The log collector is a standalone, comprehensive log monitoring tool that provides advanced filtering, category-based organization, and flexible time-based queries. Designed for system administrators and developers who need powerful log analysis capabilities.</p>"},{"location":"bash/system/log_collector.html#location","title":"Location","text":"<pre><code>bash/system/log_collector/\n\u251c\u2500\u2500 log_collector.sh      # Main script\n\u2514\u2500\u2500 log_sources.conf      # Configuration file\n</code></pre>"},{"location":"bash/system/log_collector.html#features","title":"Features","text":"<ul> <li>Category-Based Filtering: Organize logs by system, application, security, etc.</li> <li>Time-Based Queries: Filter logs by time ranges</li> <li>Configurable Sources: Define custom log sources and categories</li> <li>Advanced Options: Multiple output formats and filtering options</li> <li>Standalone Design: Self-contained with comprehensive functionality</li> </ul>"},{"location":"bash/system/log_collector.html#basic-usage","title":"Basic Usage","text":"<pre><code>cd bash/system/log_collector/\n\n# Show usage information\n./log_collector.sh --help\n\n# Create example configuration\n./log_collector.sh --create-config\n\n# Basic log collection (last 10 minutes)\n./log_collector.sh -t 10 -l 20\n</code></pre>"},{"location":"bash/system/log_collector.html#configuration","title":"Configuration","text":"<p>The <code>log_sources.conf</code> file defines log sources by category using pipe-delimited format:</p> <pre><code>system|/var/log/system.log|System messages\napplication|/var/log/app.log|Application logs\nsecurity|/var/log/auth.log|Security events\n</code></pre>"},{"location":"bash/system/log_collector.html#advanced-features","title":"Advanced Features","text":"<ul> <li>Multiple Categories: Filter logs by specific categories</li> <li>Custom Time Ranges: Flexible time-based filtering</li> <li>Output Control: Configurable line limits and formatting</li> <li>Real-time Monitoring: Live log tail functionality</li> <li>Export Options: Multiple output formats for analysis</li> </ul>"},{"location":"bash/system/log_collector.html#independence","title":"Independence","text":"<p>This script is intentionally kept standalone and does not use shared libraries, making it portable and self-contained for system administration tasks.</p>"},{"location":"bash/system/log_collector.html#see-also","title":"See Also","text":"<ul> <li>Log Size Checker - Monitor log file sizes</li> <li>System Administration Overview - Related tools</li> </ul> <p>Script Location: <code>bash/system/log_collector/log_collector.sh</code> Author: Alexander Kucera / babylondreams.de</p>"},{"location":"bash/system/purgeLoop.html","title":"Memory Purge Loop (purgeLoop.sh)","text":"<p>Automated memory management for macOS with intelligent monitoring and safe purging thresholds.</p>"},{"location":"bash/system/purgeLoop.html#usage","title":"Usage","text":"<pre><code>purgeLoop.sh [interval_minutes] [min_ram_percent] [inactive_percent]\n</code></pre>"},{"location":"bash/system/purgeLoop.html#arguments","title":"Arguments","text":"Argument Type Description Default <code>interval_minutes</code> Optional Check interval in minutes 15 <code>min_ram_percent</code> Optional Min free RAM % before purge 5 <code>inactive_percent</code> Optional Min inactive RAM % required 15"},{"location":"bash/system/purgeLoop.html#safety-features","title":"Safety Features","text":"<ul> <li>Intelligent Thresholds: Only purges when beneficial</li> <li>Continuous Monitoring: Regular memory status checks</li> <li>Safe Defaults: Conservative settings prevent system issues</li> <li>Manual Override: Ctrl+C to stop monitoring</li> </ul>"},{"location":"bash/system/purgeLoop.html#examples","title":"Examples","text":"<pre><code># Use defaults (15min intervals, 5% RAM, 15% inactive)\n./purgeLoop.sh\n\n# Check every 30 minutes\n./purgeLoop.sh 30\n\n# Aggressive settings (10min, 3% RAM, 20% inactive)\n./purgeLoop.sh 10 3 20\n\n# Conservative settings (60min, 2% RAM, 25% inactive)\n./purgeLoop.sh 60 2 25\n</code></pre>"},{"location":"bash/system/purgeLoop.html#how-it-works","title":"How It Works","text":"<ol> <li>Memory Monitoring: Continuously checks RAM usage</li> <li>Threshold Evaluation: Compares against configured limits</li> <li>Benefit Analysis: Only purges when inactive RAM is high enough</li> <li>Safe Purging: Uses macOS <code>purge</code> command when beneficial</li> <li>Status Reporting: Shows before/after memory statistics</li> </ol>"},{"location":"bash/system/purgeLoop.html#use-cases","title":"Use Cases","text":"<ul> <li>Long-Running Systems: Servers and workstations</li> <li>Memory-Intensive Work: Video editing, 3D rendering</li> <li>Background Maintenance: Automated system optimization</li> </ul>"},{"location":"bash/system/purgeLoop.html#see-also","title":"See Also","text":"<ul> <li>System Functions - Memory management utilities</li> <li>System Administration Overview - Related tools</li> </ul> <p>Script Location: <code>bash/system/purgeLoop.sh</code> Author: Alexander Kucera / babylondreams.de</p>"},{"location":"config/log_sources.html","title":"Log Sources Configuration (log_sources.conf)","text":"<p>Configuration file defining log sources and categories for the advanced log collection system.</p>"},{"location":"config/log_sources.html#configuration-file","title":"Configuration File","text":"<p>Location: <code>config/log_sources.conf</code></p>"},{"location":"config/log_sources.html#format","title":"Format","text":"<pre><code>category|log_path|description\n</code></pre>"},{"location":"config/log_sources.html#example-configuration","title":"Example Configuration","text":"<pre><code>system|/var/log/system.log|System messages and kernel events\napplication|/var/log/app.log|Application-specific logging\nsecurity|/var/log/auth.log|Authentication and security events\nnetwork|/var/log/network.log|Network connectivity and traffic\ndatabase|/var/log/mysql/error.log|Database errors and warnings\nweb|/var/log/apache2/access.log|Web server access logs\nmail|/var/log/mail.log|Email server notifications\ncustom|/path/to/custom.log|Custom application logs\n</code></pre>"},{"location":"config/log_sources.html#categories","title":"Categories","text":""},{"location":"config/log_sources.html#standard-categories","title":"Standard Categories","text":"<ul> <li>system - Core system messages</li> <li>application - Application-specific logs</li> <li>security - Security and authentication</li> <li>network - Network-related events</li> <li>database - Database operations</li> <li>web - Web server logs</li> <li>mail - Email system logs</li> </ul>"},{"location":"config/log_sources.html#custom-categories","title":"Custom Categories","text":"<p>Add your own categories for specific applications or services: <pre><code>render|/var/log/render.log|3D rendering operations\nbackup|/var/log/backup.log|Backup system status\nmonitoring|/var/log/monitor.log|System monitoring alerts\n</code></pre></p>"},{"location":"config/log_sources.html#usage-examples","title":"Usage Examples","text":""},{"location":"config/log_sources.html#system-administration","title":"System Administration","text":"<pre><code>system|/var/log/syslog|System daemon messages\nkernel|/var/log/kern.log|Kernel messages\nauth|/var/log/auth.log|User authentication\ncron|/var/log/cron.log|Scheduled task execution\n</code></pre>"},{"location":"config/log_sources.html#development-environment","title":"Development Environment","text":"<pre><code>app|/var/log/myapp.log|Main application logs\ndebug|/var/log/myapp_debug.log|Debug information\nerror|/var/log/myapp_error.log|Error tracking\nperformance|/var/log/performance.log|Performance metrics\n</code></pre>"},{"location":"config/log_sources.html#production-services","title":"Production Services","text":"<pre><code>nginx|/var/log/nginx/access.log|Web server access\nredis|/var/log/redis/redis.log|Cache server logs\npostgres|/var/log/postgresql/postgres.log|Database operations\ndocker|/var/log/docker.log|Container operations\n</code></pre>"},{"location":"config/log_sources.html#log-collection-usage","title":"Log Collection Usage","text":""},{"location":"config/log_sources.html#category-based-filtering","title":"Category-Based Filtering","text":"<pre><code># Collect system logs only\n./log_collector.sh -c system -t 60\n\n# Multiple categories\n./log_collector.sh -c \"system,security\" -t 30\n</code></pre>"},{"location":"config/log_sources.html#time-based-queries","title":"Time-Based Queries","text":"<pre><code># Last hour from all sources\n./log_collector.sh -t 60 -l 50\n\n# Last 24 hours from specific category\n./log_collector.sh -c application -t 1440\n</code></pre>"},{"location":"config/log_sources.html#best-practices","title":"Best Practices","text":""},{"location":"config/log_sources.html#file-paths","title":"File Paths","text":"<ol> <li>Use absolute paths for all log file locations</li> <li>Verify file permissions - ensure log files are readable</li> <li>Check file existence before adding to configuration</li> <li>Consider log rotation - paths should account for rotated logs</li> </ol>"},{"location":"config/log_sources.html#category-naming","title":"Category Naming","text":"<ol> <li>Use descriptive names that clearly indicate log source</li> <li>Keep names short for command-line convenience</li> <li>Use consistent naming across similar services</li> <li>Avoid special characters in category names</li> </ol>"},{"location":"config/log_sources.html#descriptions","title":"Descriptions","text":"<ol> <li>Provide clear descriptions for each log source</li> <li>Include service names where applicable</li> <li>Note any special formatting or important details</li> <li>Keep descriptions concise but informative</li> </ol>"},{"location":"config/log_sources.html#troubleshooting","title":"Troubleshooting","text":""},{"location":"config/log_sources.html#file-not-found","title":"File Not Found","text":"<ul> <li>Verify log file paths exist</li> <li>Check file permissions (must be readable)</li> <li>Ensure services are actually writing to specified paths</li> </ul>"},{"location":"config/log_sources.html#permission-denied","title":"Permission Denied","text":"<ul> <li>Add read permissions: <code>chmod +r /var/log/logfile</code></li> <li>Add user to appropriate groups for log access</li> <li>Use sudo if necessary for system logs</li> </ul>"},{"location":"config/log_sources.html#empty-results","title":"Empty Results","text":"<ul> <li>Verify logs are being written to specified files</li> <li>Check that time range includes recent activity</li> <li>Ensure log format is compatible with collection tools</li> </ul>"},{"location":"config/log_sources.html#used-by","title":"Used By","text":"<ul> <li>Log Collector - Advanced log processing system</li> </ul> <p>Configuration file: <code>config/log_sources.conf</code></p>"},{"location":"config/mail_send.html","title":"Mail Configuration (mail_send.conf)","text":"<p>Email notification configuration for render completion alerts and system notifications.</p>"},{"location":"config/mail_send.html#configuration-file","title":"Configuration File","text":"<p>Location: <code>config/mail_send.conf</code></p>"},{"location":"config/mail_send.html#basic-configuration","title":"Basic Configuration","text":"<pre><code># SMTP server settings\nFROM_ADDRESS=\"renders@yourcompany.com\"\nTO_ADDRESS=\"team@yourcompany.com\"\nSERVER=\"smtp.yourserver.com\"\nUSER=\"smtp_username\"\n\n# Note: Password set via MAIL_PASSWORD environment variable\n</code></pre>"},{"location":"config/mail_send.html#environment-variables","title":"Environment Variables","text":""},{"location":"config/mail_send.html#required","title":"Required","text":"<pre><code>export MAIL_PASSWORD=\"your_smtp_password\"\n</code></pre>"},{"location":"config/mail_send.html#smtp-provider-examples","title":"SMTP Provider Examples","text":""},{"location":"config/mail_send.html#gmailgoogle-workspace","title":"Gmail/Google Workspace","text":"<pre><code>FROM_ADDRESS=\"notifications@yourcompany.com\"\nTO_ADDRESS=\"alerts@yourcompany.com\"\nSERVER=\"smtp.gmail.com:587\"\nUSER=\"notifications@yourcompany.com\"\n</code></pre>"},{"location":"config/mail_send.html#office-365","title":"Office 365","text":"<pre><code>FROM_ADDRESS=\"system@yourcompany.com\"\nTO_ADDRESS=\"team@yourcompany.com\"\nSERVER=\"smtp.office365.com:587\"\nUSER=\"system@yourcompany.com\"\n</code></pre>"},{"location":"config/mail_send.html#custom-smtp","title":"Custom SMTP","text":"<pre><code>FROM_ADDRESS=\"noreply@yourserver.com\"\nTO_ADDRESS=\"admin@yourserver.com\"\nSERVER=\"mail.yourserver.com:587\"\nUSER=\"smtp_user\"\n</code></pre>"},{"location":"config/mail_send.html#security-setup","title":"Security Setup","text":""},{"location":"config/mail_send.html#app-passwords","title":"App Passwords","text":"<p>For Gmail and Office 365, use app-specific passwords:</p> <ol> <li>Enable 2-factor authentication</li> <li>Generate app-specific password</li> <li>Use app password as MAIL_PASSWORD</li> </ol>"},{"location":"config/mail_send.html#environment-variable-setup","title":"Environment Variable Setup","text":"<pre><code># Add to ~/.bashrc or ~/.zshrc\nexport MAIL_PASSWORD=\"app_specific_password\"\n\n# For secure server deployment\necho 'export MAIL_PASSWORD=\"password\"' &gt;&gt; /etc/environment\n</code></pre>"},{"location":"config/mail_send.html#testing-configuration","title":"Testing Configuration","text":""},{"location":"config/mail_send.html#test-email","title":"Test Email","text":"<pre><code># Test with mail notification script\n./bash/rendering/mail_send.sh\n</code></pre>"},{"location":"config/mail_send.html#manual-test","title":"Manual Test","text":"<pre><code># Direct sendemail test\nsendemail -f \"test@yourcompany.com\" \\\n          -t \"admin@yourcompany.com\" \\\n          -m \"Test message\" \\\n          -u \"Test Subject\" \\\n          -s \"smtp.yourserver.com:587\" \\\n          -xu \"smtp_user\" \\\n          -xp \"$MAIL_PASSWORD\"\n</code></pre>"},{"location":"config/mail_send.html#used-by","title":"Used By","text":"<ul> <li>Mail Notifications</li> <li>Nuke Render Automation</li> </ul> <p>Configuration file: <code>config/mail_send.conf</code></p>"},{"location":"config/setup.html","title":"Configuration Setup Guide","text":"<p>Complete guide for configuring the Tinkertoys scripts collection for your environment.</p>"},{"location":"config/setup.html#overview","title":"Overview","text":"<p>The configuration system uses centralized configuration files in the <code>config/</code> directory to manage settings for various tools and services. This approach keeps sensitive information separate from scripts and allows for easy customization.</p>"},{"location":"config/setup.html#configuration-files","title":"Configuration Files","text":""},{"location":"config/setup.html#core-configuration-files","title":"Core Configuration Files","text":"File Purpose Required For <code>mail_send.conf</code> Email notifications Rendering scripts, notifications <code>log_sources.conf</code> Log collection sources Log collector system"},{"location":"config/setup.html#setup-process","title":"Setup Process","text":""},{"location":"config/setup.html#1-email-configuration","title":"1. Email Configuration","text":""},{"location":"config/setup.html#create-mail-configuration","title":"Create Mail Configuration","text":"<pre><code>cp config/mail_send.conf.example config/mail_send.conf\n</code></pre>"},{"location":"config/setup.html#edit-mail-settings","title":"Edit Mail Settings","text":"<pre><code># Email notification configuration\nFROM_ADDRESS=\"renders@yourcompany.com\"\nTO_ADDRESS=\"team@yourcompany.com\"\nSERVER=\"smtp.yourserver.com\"\nUSER=\"smtp_username\"\n# Note: PASS is set via environment variable for security\n</code></pre>"},{"location":"config/setup.html#set-environment-variables","title":"Set Environment Variables","text":"<pre><code># Add to your shell profile (.bashrc, .zshrc, etc.)\nexport MAIL_PASSWORD=\"your_smtp_password\"\n</code></pre>"},{"location":"config/setup.html#2-log-collection-setup","title":"2. Log Collection Setup","text":""},{"location":"config/setup.html#configure-log-sources","title":"Configure Log Sources","text":"<p>Edit <code>config/log_sources.conf</code> to define log sources by category:</p> <pre><code># Format: category|log_path|description\nsystem|/var/log/system.log|System messages and events\napplication|/var/log/app.log|Application-specific logs\nsecurity|/var/log/auth.log|Authentication and security events\ncustom|/path/to/custom.log|Custom application logs\n</code></pre>"},{"location":"config/setup.html#3-environment-variables","title":"3. Environment Variables","text":""},{"location":"config/setup.html#required-variables","title":"Required Variables","text":"<pre><code># Email notifications\nexport MAIL_PASSWORD=\"your_smtp_password\"\n\n# Nuke rendering (if using Nuke scripts)\nexport NUKEPATH=\"/Applications/Nuke/Nuke15.0v4/Nuke15.0v4\"\n\n# Custom log location (optional)\nexport LOG_FILE=\"/var/log/tinkertoys.log\"\n</code></pre>"},{"location":"config/setup.html#shell-profile-setup","title":"Shell Profile Setup","text":"<p>Add environment variables to your shell profile:</p> <pre><code># ~/.bashrc or ~/.zshrc\nexport MAIL_PASSWORD=\"your_smtp_password\"\nexport NUKEPATH=\"/Applications/Nuke/Nuke15.0v4/Nuke15.0v4\"\nexport PATH=\"/path/to/tinkertoys/bash:$PATH\"\n</code></pre>"},{"location":"config/setup.html#4-dependencies-installation","title":"4. Dependencies Installation","text":""},{"location":"config/setup.html#required-software","title":"Required Software","text":"<pre><code># FFmpeg for media processing\nbrew install ffmpeg\n\n# SendEmail for notifications\nbrew install sendemail\n# or download from: http://caspian.dotconf.net/menu/Software/SendEmail/\n\n# Optional: Nuke for rendering scripts\n# Install from Foundry website\n</code></pre>"},{"location":"config/setup.html#python-dependencies","title":"Python Dependencies","text":"<pre><code># If using Python scripts\npip install -r requirements.txt  # if available\n</code></pre>"},{"location":"config/setup.html#5-permissions-setup","title":"5. Permissions Setup","text":""},{"location":"config/setup.html#script-permissions","title":"Script Permissions","text":"<pre><code># Make all scripts executable\nfind bash/ -name \"*.sh\" -exec chmod +x {} \\;\n</code></pre>"},{"location":"config/setup.html#directory-permissions","title":"Directory Permissions","text":"<pre><code># Ensure log directories exist and are writable\nmkdir -p ~/logs\nchmod 755 ~/logs\n\n# For system logs (if needed)\nsudo mkdir -p /var/log/tinkertoys\nsudo chown $(whoami) /var/log/tinkertoys\n</code></pre>"},{"location":"config/setup.html#testing-configuration","title":"Testing Configuration","text":""},{"location":"config/setup.html#email-configuration-test","title":"Email Configuration Test","text":"<pre><code># Test email notifications\n./bash/rendering/mail_send.sh\n</code></pre>"},{"location":"config/setup.html#log-collection-test","title":"Log Collection Test","text":"<pre><code># Test log collector\ncd bash/system/log_collector/\n./log_collector.sh --help\n./log_collector.sh -t 10 -l 5\n</code></pre>"},{"location":"config/setup.html#media-processing-test","title":"Media Processing Test","text":"<pre><code># Test media functions (requires FFmpeg)\n./bash/media/convert_movie_to_h264.sh --help\n</code></pre>"},{"location":"config/setup.html#security-best-practices","title":"Security Best Practices","text":""},{"location":"config/setup.html#sensitive-information","title":"Sensitive Information","text":"<ol> <li>Never commit passwords to version control</li> <li>Use environment variables for all credentials</li> <li>Set appropriate file permissions on configuration files</li> <li>Regularly rotate passwords and update configurations</li> </ol>"},{"location":"config/setup.html#file-permissions","title":"File Permissions","text":"<pre><code># Secure configuration files\nchmod 600 config/mail_send.conf\nchmod 644 config/log_sources.conf\n</code></pre>"},{"location":"config/setup.html#environment-variables","title":"Environment Variables","text":"<pre><code># Verify environment variables are set\necho \"Mail password set: $([[ -n \"$MAIL_PASSWORD\" ]] &amp;&amp; echo \"Yes\" || echo \"No\")\"\necho \"Nuke path set: $([[ -n \"$NUKEPATH\" ]] &amp;&amp; echo \"Yes\" || echo \"No\")\"\n</code></pre>"},{"location":"config/setup.html#troubleshooting","title":"Troubleshooting","text":""},{"location":"config/setup.html#common-issues","title":"Common Issues","text":""},{"location":"config/setup.html#email-not-working","title":"Email Not Working","text":"<ol> <li>Check SMTP server settings in <code>mail_send.conf</code></li> <li>Verify <code>MAIL_PASSWORD</code> environment variable is set</li> <li>Test network connectivity to SMTP server</li> <li>Check firewall settings</li> </ol>"},{"location":"config/setup.html#scripts-not-found","title":"Scripts Not Found","text":"<ol> <li>Verify scripts are executable: <code>ls -la bash/</code></li> <li>Check PATH includes script directories</li> <li>Use absolute paths if needed</li> </ol>"},{"location":"config/setup.html#permission-denied","title":"Permission Denied","text":"<ol> <li>Check file permissions: <code>ls -la config/</code></li> <li>Verify directory write permissions</li> <li>Check ownership of files and directories</li> </ol>"},{"location":"config/setup.html#missing-dependencies","title":"Missing Dependencies","text":"<ol> <li>Install required software (FFmpeg, sendemail, etc.)</li> <li>Verify commands are in PATH: <code>which ffmpeg</code></li> <li>Check version compatibility</li> </ol>"},{"location":"config/setup.html#validation-commands","title":"Validation Commands","text":"<pre><code># Validate configuration\n./bash/test_all_scripts.sh\n\n# Quick validation\n./bash/quick_test.sh\n\n# Comprehensive validation\n./bash/final_validation.sh\n</code></pre>"},{"location":"config/setup.html#advanced-configuration","title":"Advanced Configuration","text":""},{"location":"config/setup.html#custom-log-locations","title":"Custom Log Locations","text":"<pre><code># Per-script log files\nexport LOG_FILE=\"/var/log/media_processing.log\"\n./bash/media/convert_movie_to_h264.sh input.mov\n\n# Temporary log for specific operations\nLOG_FILE=\"./operation_$(date +%Y%m%d).log\" ./bash/script.sh\n</code></pre>"},{"location":"config/setup.html#integration-with-system-services","title":"Integration with System Services","text":"<pre><code># systemd service example (Linux)\n[Unit]\nDescription=Tinkertoys Background Service\nAfter=network.target\n\n[Service]\nType=simple\nEnvironment=MAIL_PASSWORD=your_password\nEnvironment=LOG_FILE=/var/log/tinkertoys.log\nExecStart=/path/to/tinkertoys/bash/script.sh\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"config/setup.html#backup-configuration","title":"Backup Configuration","text":"<pre><code># Backup configuration files\ntar -czf tinkertoys_config_$(date +%Y%m%d).tar.gz config/\n\n# Restore configuration\ntar -xzf tinkertoys_config_backup.tar.gz\n</code></pre>"},{"location":"config/setup.html#see-also","title":"See Also","text":"<ul> <li>Mail Configuration - Detailed email setup</li> <li>Log Sources Configuration - Log collection setup</li> <li>Bash Scripts Overview - Script usage patterns</li> </ul> <p>Configuration files located in: <code>config/</code> Author: Alexander Kucera / babylondreams.de</p>"},{"location":"python/overview.html","title":"Python Scripts Overview","text":"<p>Collection of Python utilities for file management, data processing, and workflow automation.</p>"},{"location":"python/overview.html#available-scripts","title":"Available Scripts","text":""},{"location":"python/overview.html#file-management","title":"File Management","text":"<ul> <li>compareFolders.py - Directory comparison and analysis</li> <li>fix_symlinks.py - Symlink repair and validation</li> <li>keepLargerVersion.py - Intelligent file version management</li> <li>markemptyfolders.py - Empty directory identification</li> </ul>"},{"location":"python/overview.html#media-design","title":"Media &amp; Design","text":"<ul> <li>bd_show_used_aftereffects_footage.py - After Effects project analysis</li> <li>convert_psd_to_exr.py - Photoshop to EXR conversion</li> <li>sg_thumb.py - Thumbnail generation</li> </ul>"},{"location":"python/overview.html#data-processing","title":"Data Processing","text":"<ul> <li>blog_post_timestamp.py - Blog post timestamp management</li> <li>blog_post_transform.py - Blog content transformation</li> <li>DayOne_split.py - DayOne journal processing</li> <li>exportPinboard.py - Pinboard bookmark export</li> <li>renderstats.py - Render statistics analysis</li> </ul>"},{"location":"python/overview.html#system-utilities","title":"System Utilities","text":"<ul> <li>checkProjectsRaid.py - RAID system monitoring</li> <li>compareSizes.py - File size comparison utilities</li> <li>switch_paths.py - Path switching for project management</li> <li>timer.py - Timing and performance utilities</li> </ul>"},{"location":"python/overview.html#shared-libraries","title":"Shared Libraries","text":"<ul> <li>lib/applescript.py - AppleScript integration</li> <li>lib/copyFile.py - Safe file copying utilities</li> <li>lib/hash_for_file.py - File hashing functions</li> <li>lib/query_yes_no.py - Interactive user prompts</li> </ul>"},{"location":"python/overview.html#architecture","title":"Architecture","text":"<p>The Python scripts follow a modular design with shared utilities in the <code>lib/</code> directory. Most scripts are designed for specific workflow automation tasks and include comprehensive error handling.</p>"},{"location":"python/overview.html#requirements","title":"Requirements","text":"<ul> <li>Python 3.6+ - Modern Python features</li> <li>Platform-specific libraries - Some scripts require macOS-specific functionality</li> <li>Third-party packages - Individual scripts may have specific dependencies</li> </ul>"},{"location":"python/overview.html#usage-patterns","title":"Usage Patterns","text":"<p>Most Python scripts can be run directly: <pre><code>python script_name.py [arguments]\n</code></pre></p> <p>Some scripts include command-line interfaces and help systems accessible via: <pre><code>python script_name.py --help\n</code></pre></p> <p>Note: Detailed documentation for individual Python scripts will be added as needed. Most scripts include docstrings and inline documentation.</p>"},{"location":"ruby/overview.html","title":"Ruby Scripts Overview","text":"<p>Ruby utilities for task management and workflow integration, primarily focused on productivity tool automation.</p>"},{"location":"ruby/overview.html#available-scripts","title":"Available Scripts","text":""},{"location":"ruby/overview.html#task-management-integration","title":"Task Management Integration","text":"<ul> <li>merge_asana_into_omnifocus.rb - Synchronize tasks between Asana and OmniFocus</li> </ul>"},{"location":"ruby/overview.html#architecture","title":"Architecture","text":"<p>The Ruby scripts are designed for integration between productivity and project management tools, providing automation for workflows that span multiple applications.</p>"},{"location":"ruby/overview.html#requirements","title":"Requirements","text":"<ul> <li>Ruby 2.6+ - Modern Ruby interpreter</li> <li>Third-party gems - Scripts may require specific Ruby gems for API integration</li> <li>Application access - Some scripts require access to specific applications (OmniFocus, Asana)</li> </ul>"},{"location":"ruby/overview.html#usage","title":"Usage","text":"<p>Ruby scripts are typically run directly: <pre><code>ruby script_name.rb [arguments]\n</code></pre></p>"},{"location":"ruby/overview.html#integration","title":"Integration","text":"<p>Ruby scripts often serve as bridges between different productivity tools, automating data synchronization and workflow management tasks.</p> <p>Note: Detailed documentation for individual Ruby scripts will be added as needed. Scripts include inline documentation and usage examples.</p>"}]}