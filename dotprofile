# to keep in sync with this Dropbox copy create a ~/.profile and add `source /Volumes/ProjectsRaid/x_Pipeline/Scripting/tinkertoys/dotprofile`

# Tell ls to be colourful
source "`brew --prefix`/etc/grc.bashrc"
export CLICOLOR=1

# Tell grep to highlight matches
export GREP_OPTIONS='--color=auto'

# Enhanced prompt

export PS1="\[\e[1m\]________________________________________________________________________________\n\[\e[1;32;40m\]| \w @ \h (\u)\n| \t => \[\e[0m\]"

export PATH=/usr/local/bin:/usr/local/sbin:$PATH:$(find /Volumes/ProjectsRaid/x_Pipeline/Scripting -name '.*' -prune -o -type d | tr '\n' ':')

sign () { /usr/bin/codesign -s "Kucera Alexander Code Signing Certificate" -f "${1}"; }

# easy sourcing

alias sourcep='source ~/.profile'

# ls better
alias ls='ls -l -a -h -F'
alias llc='clear; ls'
alias c='clear'

# recursively delete Dropbox conflicted files
alias dbconflict="find . -name *\ \(*conflicted* -exec rm {} \;"

# Get your current public IP
alias ip="curl icanhazip.com"

# copy the working directory path
alias cpwd='pwd|tr -d "\n"|pbcopy'

# top
alias cpu='top -o cpu -n 10'
alias mem='top -o rsize -n 5' # memory

#copy output of last command to clipboard
alias cl="fc -e -|pbcopy"

# create a new Gist of given name from the clipboard contents
# needs https://github.com/defunkt/gist installed

alias gist="gist -P -c -f $1"

# app shortcuts
alias modo="/Volumes/ProjectsRaid/x_Pipeline/x_AppPlugins/modo/modo.app/Contents/MacOS/modo"
alias modor="/Volumes/ProjectsRaid/x_Pipeline/x_AppPlugins/modo/modo.app/Contents/MacOS/modo_cl"
alias modorb="/Volumes/ProjectsRaid/x_Pipeline/x_AppPlugins/modo/modo.app/Contents/MacOS/modo_cl < /Volumes/ProjectsRaid/x_Pipeline/Scripting/tinkertoys/modo_render.txt"
alias modorbc="/Volumes/ProjectsRaid/x_Pipeline/x_AppPlugins/modo/modo.app/Contents/MacOS/modo_cl < /Volumes/ProjectsRaid/x_Pipeline/Scripting/tinkertoys/modo_render_chef.txt"
alias nuke="/Applications/Nuke8.0v5/NukeX8.0v5.app/NukeX8.0v5"
alias nuker="/Applications/Nuke8.0v5/NukeX8.0v5.app/NukeX8.0v5 -x -m 8 --gpu"
alias handbrake="/Users/alex/Applications/HandBrake.app/Contents/MacOS/HandBrakeCLI"
alias maya="/Applications/Autodesk/maya2013.5/Maya.app/Contents/bin/Render"
alias deadslave="/Applications/Deadline/DeadlineSlave.app/Contents/MacOS/DeadlineSlave -nogui"
alias monitor="/Applications/Deadline/DeadlineMonitor.app/Contents/MacOS/DeadlineMonitor"
alias deadpulse="/Applications/Deadline/DeadlinePulse.app/Contents/MacOS/DeadlinePulse -nogui"
alias minitor="/Applications/Deadline/DeadlineJobMonitor.app/Contents/MacOS/DeadlineJobMonitor"
alias log="/Users/alex/Documents/Scripts/logtodayone.rb"
alias deadlic="'/Applications/Thinkbox/License Server/lmgrd' -c '/Applications/Thinkbox/License Server/Thinkbox.lic'"
alias nukecollect="nuke -t /Volumes/Drobo01/Archiv/Projekte/x_Pipeline/x_AppPlugins/Nuke/plugins/NukeCollect_cmdline.py"
alias tank="/Volumes/ProjectsRaid/x_Pipeline/x_AppPlugins/Shotgun/Tank/studio/tank"
alias tankdocs="open https://toolkit.shotgunsoftware.com"

export X_PIPELINE_LOCATION=/Volumes/ProjectsRaid/x_Pipeline
export NUKE_PATH=$X_PIPELINE_LOCATION/x_AppPlugins/Nuke/plugins
export NUKE_TEMP_DIR=/Volumes/SSD/Cache/Nuke
export OPTICAL_FLARES_PATH=$X_PIPELINE_LOCATION/x_AppPlugins/Nuke/plugins/OpticalFlares/Textures-And-Presets
export TANK_PATH=$X_PIPELINE_LOCATION/x_AppPlugins/Shotgun/Tank/studio
export SHOTGUN_API_PATH=$X_PIPELINE_LOCATION/x_AppPlugins/Shotgun/PythonAPI/shotgun_api3
export MAYA_LOCATION=/Applications/Autodesk/maya2013.5/Maya.app/Contents
export PATH=$MAYA_LOCATION/bin:$PATH:/Applications/Deadline/Resources/bin:$TANK_PATH
export PYTHONPATH=/usr/local/lib/python2.7/site-packages:$X_PIPELINE_LOCATION/x_AppPlugins/Maya/pymel-1.0.3:$TANK_PATH/install/core/python:$SHOTGUN_API_PATH:$(find /Volumes/ProjectsRaid/x_Pipeline/Scripting -name '.*' -prune -o -type d | tr '\n' ':')
export PYTHONPATH
export NODE_PATH="/usr/local/lib/node_modules"
export EDITOR="/usr/local/bin/mate"
export HOMEBREW_CASK_OPTS="--appdir=/Applications"

export NEXUS_ASSET=/Volumes/ProjectsRaid/x_Pipeline/x_AppPlugins/modo/content/assets
export NEXUS_CONTENT=/Volumes/ProjectsRaid/x_Pipeline/x_AppPlugins/modo/content
export NEXUS_LICENSE=/Volumes/ProjectsRaid/x_Pipeline/x_AppPlugins/modo/user_resources/alex/license
export NEXUS_PREFS=/Volumes/ProjectsRaid/x_Pipeline/x_AppPlugins/modo/user_resources/alex/os_spec
export NEXUS_TEMP=/Volumes/SSD/Cache/modo/temp
export NEXUS_USER=/Volumes/ProjectsRaid/x_Pipeline/x_AppPlugins/modo/user_resources/alex

if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi
export PYENV_ROOT=/usr/local/opt/pyenv